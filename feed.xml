<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://zjgcjy.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://zjgcjy.github.io/" rel="alternate" type="text/html" /><updated>2020-01-14T11:53:02+08:00</updated><id>https://zjgcjy.github.io/feed.xml</id><title type="html">My way, though far away</title><subtitle>A flexible Blog of zjgcjy</subtitle><author><name>zjgcjy</name></author><entry><title type="html">usage of scoop</title><link href="https://zjgcjy.github.io/posts/2020-01/scoop_usage.html" rel="alternate" type="text/html" title="usage of scoop" /><published>2020-01-02T00:01:29+08:00</published><updated>2020-01-02T00:01:29+08:00</updated><id>https://zjgcjy.github.io/posts/2020-01/scoop_usage</id><content type="html" xml:base="https://zjgcjy.github.io/posts/2020-01/scoop_usage.html">&lt;blockquote&gt;
  &lt;p&gt;重装系统，开始使用scoop&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;scoop基本情况&quot;&gt;scoop基本情况&lt;/h1&gt;

&lt;p&gt;略过&lt;/p&gt;

&lt;h1 id=&quot;安装步骤&quot;&gt;安装步骤&lt;/h1&gt;

&lt;p&gt;脚本如下&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 获取当前权限，需要修改&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 有Unrestricted、RemoteSigned、AllSigned、Restricted、PROCESS、CURRENTUSER、Bypass、Undefined、LOCALMACHINE等情况&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-ExecutionPolicy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 设置ps权限，我这里设置是RemoteSigned，远程执行脚本需要数字签名。&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Set-ExecutionPolicy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RemoteSigned&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 安装scoop&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Invoke-Expression&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Net.WebClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DownloadString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https://get.scoop.sh'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 简写&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;iwr&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-useb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get.scoop.sh&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 安装完成后需要修改环境变量和安装路径，同时复制刚刚安装到C盘中的scoop全部内容。&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 当前用户&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SCOOP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'D:\Applications\Scoop'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetEnvironmentVariable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SCOOP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SCOOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'User'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 管理员&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SCOOP_GLOBAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'D:\Applications\Scoop\GlobalScoopApps'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SetEnvironmentVariable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SCOOP_GLOBAL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SCOOP_GLOBAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Machine'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 安装aria2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scoop&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;aria2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 安装git&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scoop&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 添加新的拓展仓库&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scoop&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bucket&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extras&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这样基本的软件就可以了。&lt;/p&gt;

&lt;h1 id=&quot;查找软件&quot;&gt;查找软件&lt;/h1&gt;

&lt;p&gt;查找特定软件&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 查找git&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scoop&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;卸载&quot;&gt;卸载&lt;/h1&gt;

&lt;p&gt;卸载特定软件&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 卸载git&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;scoop&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;uninstall&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;反正命令很简单了。而且高度隔离，源文件都是官网的，默认main仓库里都是非GUI程序。&lt;/p&gt;

&lt;h1 id=&quot;list&quot;&gt;list&lt;/h1&gt;
&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;aria2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;shadowsocks&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;everything&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;设置代理&quot;&gt;设置代理&lt;/h1&gt;

&lt;p&gt;修改代理&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scoop config set proxy 127.0.0.1:1111&lt;/code&gt;&lt;/p&gt;</content><author><name>zjgcjy</name></author><category term="日记" /><summary type="html">重装系统，开始使用scoop</summary></entry><entry><title type="html">daily notes of 2020-01</title><link href="https://zjgcjy.github.io/posts/2020-01/daily_notes.html" rel="alternate" type="text/html" title="daily notes of 2020-01" /><published>2020-01-01T09:28:07+08:00</published><updated>2020-01-01T09:28:07+08:00</updated><id>https://zjgcjy.github.io/posts/2020-01/daily_notes</id><content type="html" xml:base="https://zjgcjy.github.io/posts/2020-01/daily_notes.html">&lt;h1 id=&quot;1月1日&quot;&gt;1月1日&lt;/h1&gt;

&lt;p&gt;重装了系统，使用scoop重新管理软件。&lt;/p&gt;

&lt;h1 id=&quot;1月2日&quot;&gt;1月2日&lt;/h1&gt;

&lt;p&gt;重装系统，复习软件安全原理。&lt;/p&gt;

&lt;h1 id=&quot;1月3日&quot;&gt;1月3日&lt;/h1&gt;

&lt;p&gt;复习软件安全原理。&lt;/p&gt;

&lt;h1 id=&quot;1月5日&quot;&gt;1月5日&lt;/h1&gt;

&lt;p&gt;复习软件安全原理。&lt;/p&gt;

&lt;h1 id=&quot;1月6日&quot;&gt;1月6日&lt;/h1&gt;

&lt;p&gt;继续复习，太多了。&lt;/p&gt;

&lt;h1 id=&quot;1月9日&quot;&gt;1月9日&lt;/h1&gt;

&lt;p&gt;在雁栖湖的最后一天。&lt;/p&gt;</content><author><name>zjgcjy</name></author><category term="日记" /><summary type="html">1月1日</summary></entry><entry><title type="html">Diary_notes</title><link href="https://zjgcjy.github.io/posts/2019-12/diary_notes.html" rel="alternate" type="text/html" title="Diary_notes" /><published>2019-12-02T21:15:00+08:00</published><updated>2019-12-02T21:15:00+08:00</updated><id>https://zjgcjy.github.io/posts/2019-12/diary_notes</id><content type="html" xml:base="https://zjgcjy.github.io/posts/2019-12/diary_notes.html">&lt;blockquote&gt;
  &lt;p&gt;最近很浮躁，日记好久没写了，书也没看，论文也没看，运动也是断断续续。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;12月5日&quot;&gt;12月5日&lt;/h1&gt;

&lt;p&gt;打算重新开blog，找了很久，从stackedit到blogger，从hexo到wordpress再到jekyll。因为图片的缘故，还在vps上搭了rclone来同步onedrive当图床用，后来又用git repo来当图床（结果发现URL被墙了）。烦。&lt;/p&gt;

&lt;h1 id=&quot;12月10日&quot;&gt;12月10日&lt;/h1&gt;

&lt;p&gt;重开blog，公开所有posts，采用Jekyll格式。&lt;/p&gt;

&lt;p&gt;三个repo，其中markdown原文未公开。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;blog source&lt;/li&gt;
  &lt;li&gt;blog site&lt;/li&gt;
  &lt;li&gt;posts (private)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;12月11日&quot;&gt;12月11日&lt;/h1&gt;

&lt;p&gt;review Jekyll source，fork了一份开始改，基本没啥问题了，由于之前没用过jekyll，有点不熟悉。&lt;/p&gt;

&lt;h1 id=&quot;12月12日&quot;&gt;12月12日&lt;/h1&gt;

&lt;p&gt;花了一天的时间改code。基本是confige的部分，还有我以前的posts的格式不满足Jekyll的识别要求，以及image的相对链接地址。
基本都改完了，除了comments部分，disqus由于被墙了，需要梯子，但是还有一个问题是comments的布局错乱，不清楚原因。晚上的时候去源repo提了issue。&lt;/p&gt;

&lt;h1 id=&quot;12月13日&quot;&gt;12月13日&lt;/h1&gt;

&lt;p&gt;USTC的大佬回了issue，最后检查是发布的时候命令用错了&lt;a href=&quot;https://github.com/mmistakes/minimal-mistakes/issues/2343&quot;&gt;issue link&lt;/a&gt;，我使用的是&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build JEKYLL_ENV=production&lt;/code&gt;貌似这样后面的环境变量没起作用，但是我测试应该是一部分起作用了，一脸懵逼。真正发布的命令是&lt;code class=&quot;highlighter-rouge&quot;&gt;JEKYLL_ENV=production bundle exec jekyll build&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;晚上的时候还修改了toc，可以stricky，最后修改了columns的width，这样posts的内容可以占到80%左右。&lt;/p&gt;

&lt;p&gt;todo list on site:&lt;/p&gt;
&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;import visit speed &amp;amp; add cdn 目前速度有点慢，一是disqus被墙，二是font awesome被墙。&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;add github action 整合3个repo，采用CD &amp;amp; CL，自动发布&lt;/li&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;merge image to posts 整合所有image到posts repo，而不是blog source repo，或者用一个单独的repo&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;12月14日&quot;&gt;12月14日&lt;/h1&gt;

&lt;p&gt;成功上船byr，bbs里面提到一个ipv6访问uwp的方法，&lt;a href=&quot;https://jiayaoo3o.github.io/2019/06/28/windows10%E4%B8%8BUWP%E5%BA%94%E7%94%A8%E4%BD%BF%E7%94%A8%E7%B3%BB%E7%BB%9F%E4%BB%A3%E7%90%86/&quot;&gt;link&lt;/a&gt;，其中使用到了&lt;code class=&quot;highlighter-rouge&quot;&gt;CheckNetIsolation.exe&lt;/code&gt;这个程序，我没详细看，但是之后会试一下，毕竟所里网太垃圾了。下面是powershell脚本。&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;FOR&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/F&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tokens=11 delims=\&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IN&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'REG QUERY &quot;HKCU\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppContainer\Mappings&quot;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;DO&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CheckNetIsolation.exe&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LoopbackExempt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=%&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;12月15日&quot;&gt;12月15日&lt;/h1&gt;

&lt;p&gt;写云计算安全论文。&lt;/p&gt;

&lt;p&gt;搞完。&lt;/p&gt;

&lt;p&gt;太烦了，每次写东西都要update 3个repo，醉了，准备用github action自动发布好了。（还是先弄编译原理吧，逃）&lt;/p&gt;

&lt;p&gt;今天surface还出了问题，电池充到81%充不进去了。。。醉了，明天放完电再试试。&lt;/p&gt;

&lt;h1 id=&quot;12月16日&quot;&gt;12月16日&lt;/h1&gt;

&lt;p&gt;下大雪，烦，不能跑步也打不了球。&lt;/p&gt;

&lt;p&gt;继续看书。&lt;/p&gt;

&lt;h1 id=&quot;12月19日&quot;&gt;12月19日&lt;/h1&gt;

&lt;p&gt;看到了scoop，作为win下的包管理器，很舒服，简单配置了一下，除了速度慢，因为要翻墙，其他没得说。还有powershell是真滴牛逼。&lt;/p&gt;

&lt;h1 id=&quot;12月22日&quot;&gt;12月22日&lt;/h1&gt;

&lt;p&gt;英语课太烦了，ppt和instruction写的快吐了。&lt;/p&gt;

&lt;h1 id=&quot;12月23日&quot;&gt;12月23日&lt;/h1&gt;

&lt;p&gt;搞完英语了，明天有恶意代码，不想看了，估计很简单。&lt;/p&gt;

&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;编译原理ing&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;12月24日&quot;&gt;12月24日&lt;/h1&gt;

&lt;p&gt;平安夜考试，不过已经习惯了。哈哈。考完恶意代码，没啥难度，手写的很累。&lt;/p&gt;

&lt;h1 id=&quot;12月25日&quot;&gt;12月25日&lt;/h1&gt;

&lt;p&gt;新购的内存条到了，给老爷机续上了，闲鱼真香，准备之后再加一块2T的机械硬盘。&lt;/p&gt;

&lt;p&gt;圣诞节，真无聊，雪还没化，不能跑步也打不了球。&lt;/p&gt;

&lt;h1 id=&quot;12月26日&quot;&gt;12月26日&lt;/h1&gt;

&lt;p&gt;复习编译原理&lt;/p&gt;

&lt;h1 id=&quot;12月27日&quot;&gt;12月27日&lt;/h1&gt;

&lt;p&gt;复习编译原理&lt;/p&gt;

&lt;p&gt;bull shit，升级到7.4后才看见ida的通知：&lt;a href=&quot;https://www.hex-rays.com/products/ida/lumina/lumina_cert_20191010.shtml&quot;&gt;IDA: Lumina certificate expiration on October 10, 2019&lt;/a&gt; 我太难了，10月那个时候搞了好久，我还以为是啥情况。终于可以用lumina了，逆向是不可能逆向的。&lt;/p&gt;

&lt;p&gt;lumina真香！&lt;/p&gt;

&lt;h1 id=&quot;12月30日&quot;&gt;12月30日&lt;/h1&gt;

&lt;p&gt;考完编译原理了，我炸了。&lt;/p&gt;

&lt;p&gt;我是真的菜。&lt;/p&gt;

&lt;p&gt;下面准备补题吧，还有欠缺的东西，继续闭关。&lt;/p&gt;

&lt;h1 id=&quot;12月31日&quot;&gt;12月31日&lt;/h1&gt;

&lt;p&gt;19年最后一天，好烦，好忙，软件安全也上完了。&lt;/p&gt;

&lt;p&gt;今天又打了球，跨年晚会没啥意思，还是听歌舒服。&lt;/p&gt;

&lt;p&gt;明年加油。&lt;/p&gt;</content><author><name>zjgcjy</name></author><category term="日记" /><summary type="html">最近很浮躁，日记好久没写了，书也没看，论文也没看，运动也是断断续续。 12月5日 打算重新开blog，找了很久，从stackedit到blogger，从hexo到wordpress再到jekyll。因为图片的缘故，还在vps上搭了rclone来同步onedrive当图床用，后来又用git repo来当图床（结果发现URL被墙了）。烦。 12月10日 重开blog，公开所有posts，采用Jekyll格式。 三个repo，其中markdown原文未公开。 blog source blog site posts (private) 12月11日 review Jekyll source，fork了一份开始改，基本没啥问题了，由于之前没用过jekyll，有点不熟悉。 12月12日 花了一天的时间改code。基本是confige的部分，还有我以前的posts的格式不满足Jekyll的识别要求，以及image的相对链接地址。 基本都改完了，除了comments部分，disqus由于被墙了，需要梯子，但是还有一个问题是comments的布局错乱，不清楚原因。晚上的时候去源repo提了issue。 12月13日 USTC的大佬回了issue，最后检查是发布的时候命令用错了issue link，我使用的是jekyll build JEKYLL_ENV=production貌似这样后面的环境变量没起作用，但是我测试应该是一部分起作用了，一脸懵逼。真正发布的命令是JEKYLL_ENV=production bundle exec jekyll build。 晚上的时候还修改了toc，可以stricky，最后修改了columns的width，这样posts的内容可以占到80%左右。 todo list on site: import visit speed &amp;amp; add cdn 目前速度有点慢，一是disqus被墙，二是font awesome被墙。 add github action 整合3个repo，采用CD &amp;amp; CL，自动发布 merge image to posts 整合所有image到posts repo，而不是blog source repo，或者用一个单独的repo 12月14日 成功上船byr，bbs里面提到一个ipv6访问uwp的方法，link，其中使用到了CheckNetIsolation.exe这个程序，我没详细看，但是之后会试一下，毕竟所里网太垃圾了。下面是powershell脚本。 FOR /F &quot;tokens=11 delims=\&quot; %p IN ('REG QUERY &quot;HKCU\Software\Classes\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppContainer\Mappings&quot;') DO CheckNetIsolation.exe LoopbackExempt -a -p=%p 12月15日 写云计算安全论文。 搞完。 太烦了，每次写东西都要update 3个repo，醉了，准备用github action自动发布好了。（还是先弄编译原理吧，逃） 今天surface还出了问题，电池充到81%充不进去了。。。醉了，明天放完电再试试。 12月16日 下大雪，烦，不能跑步也打不了球。 继续看书。 12月19日 看到了scoop，作为win下的包管理器，很舒服，简单配置了一下，除了速度慢，因为要翻墙，其他没得说。还有powershell是真滴牛逼。 12月22日 英语课太烦了，ppt和instruction写的快吐了。 12月23日 搞完英语了，明天有恶意代码，不想看了，估计很简单。 编译原理ing 12月24日 平安夜考试，不过已经习惯了。哈哈。考完恶意代码，没啥难度，手写的很累。 12月25日 新购的内存条到了，给老爷机续上了，闲鱼真香，准备之后再加一块2T的机械硬盘。 圣诞节，真无聊，雪还没化，不能跑步也打不了球。 12月26日 复习编译原理 12月27日 复习编译原理 bull shit，升级到7.4后才看见ida的通知：IDA: Lumina certificate expiration on October 10, 2019 我太难了，10月那个时候搞了好久，我还以为是啥情况。终于可以用lumina了，逆向是不可能逆向的。 lumina真香！ 12月30日 考完编译原理了，我炸了。 我是真的菜。 下面准备补题吧，还有欠缺的东西，继续闭关。 12月31日 19年最后一天，好烦，好忙，软件安全也上完了。 今天又打了球，跨年晚会没啥意思，还是听歌舒服。 明年加油。</summary></entry><entry><title type="html">Dirary_november</title><link href="https://zjgcjy.github.io/posts/2019-11/Dirary_November.html" rel="alternate" type="text/html" title="Dirary_november" /><published>2019-11-01T21:15:00+08:00</published><updated>2019-11-01T21:15:00+08:00</updated><id>https://zjgcjy.github.io/posts/2019-11/Dirary_November</id><content type="html" xml:base="https://zjgcjy.github.io/posts/2019-11/Dirary_November.html">&lt;blockquote&gt;
  &lt;p&gt;每日所作所得&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;11月1日&quot;&gt;11月1日&lt;/h1&gt;</content><author><name>zjgcjy</name></author><category term="日记" /><summary type="html">每日所作所得 11月1日</summary></entry><entry><title type="html">Software_security_project</title><link href="https://zjgcjy.github.io/posts/2019-10/Software_Security_Project.html" rel="alternate" type="text/html" title="Software_security_project" /><published>2019-10-30T01:15:00+08:00</published><updated>2019-10-30T01:15:00+08:00</updated><id>https://zjgcjy.github.io/posts/2019-10/Software_Security_Project</id><content type="html" xml:base="https://zjgcjy.github.io/posts/2019-10/Software_Security_Project.html">&lt;blockquote&gt;
  &lt;p&gt;Malware
vs2010&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;infocollection&quot;&gt;InfoCollection&lt;/h1&gt;

&lt;p&gt;configure&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2019-10/Snipaste_2019-10-31_16-06-11.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;warning&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/2019-10/Snipaste_2019-10-31_16-07-10.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name>zjgcjy</name></author><category term="malware" /><summary type="html">Malware vs2010 InfoCollection configure warning</summary></entry><entry><title type="html">Pacman_helper</title><link href="https://zjgcjy.github.io/posts/2019-10/Pacman_Helper.html" rel="alternate" type="text/html" title="Pacman_helper" /><published>2019-10-29T21:15:00+08:00</published><updated>2019-10-29T21:15:00+08:00</updated><id>https://zjgcjy.github.io/posts/2019-10/Pacman_Helper</id><content type="html" xml:base="https://zjgcjy.github.io/posts/2019-10/Pacman_Helper.html">&lt;blockquote&gt;
  &lt;p&gt;pacman 手册&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://www.xdty.org/1347&quot;&gt;archlinux pacman 命令&lt;/a&gt;
&lt;a href=&quot;https://wiki.archlinux.org/index.php/Pacman&quot;&gt;arch wiki&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;pacman -Sy 仅同步源&lt;/p&gt;

&lt;p&gt;pacman -Syu 同步源，并更新系统&lt;/p&gt;

&lt;p&gt;pacman -Su –ignore foo 升级时不升级包foo&lt;/p&gt;

&lt;p&gt;pacman -S abc 从本地数据库中得到abc的信息，下载安装abc包&lt;/p&gt;

&lt;p&gt;pacman -Sy abc 和源同步后安装名为abc的包&lt;/p&gt;

&lt;p&gt;pacman -Sd abc 忽略依赖性问题，安装包abc&lt;/p&gt;

&lt;p&gt;pacman -Sf abc 强制安装包abc&lt;/p&gt;

&lt;p&gt;pacman -Si abc 从数据库中搜索包abc的信息&lt;/p&gt;

&lt;p&gt;pacman -Ss abc 搜索有关abc信息的包&lt;/p&gt;

&lt;p&gt;pacman -Sg abc 查询abc这个包组包含的软件包&lt;/p&gt;

&lt;p&gt;pacman -Sw abc 下载包而不安装它&lt;/p&gt;

&lt;p&gt;pacman -R abc 删除abc包&lt;/p&gt;

&lt;p&gt;pacman -Rc abc 删除abc包和依赖abc的包&lt;/p&gt;

&lt;p&gt;pacman -Rsn abc 删除包所有不需要的依赖包并删除其配置文件&lt;/p&gt;

&lt;p&gt;pacman -Rscn abc 删除abc包所有不需要的依赖包和依赖abd的包并删除其配置文件&lt;/p&gt;

&lt;p&gt;pacman -Sc 清理/var/cache/pacman/pkg目录下的旧包&lt;/p&gt;

&lt;p&gt;pacman -Scc 清除所有下载的包和数据库&lt;/p&gt;

&lt;p&gt;pacman -Q 列出系统中所有的包&lt;/p&gt;

&lt;p&gt;pacman -Q package 在本地包数据库搜索(查询)指定软件包&lt;/p&gt;

&lt;p&gt;pacman -Qi package 在本地包数据库搜索(查询)指定软件包并列出相关信息&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;pacman -Q&lt;/td&gt;
      &lt;td&gt;wc -l 统计当前系统中的包数量&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;pacman -Qdt 找出孤立包&lt;/p&gt;

&lt;p&gt;pacman -Rns $(pacman -Qtdq) 删除孤立软件包（递归的,小心用)&lt;/p&gt;

&lt;p&gt;pacman -U abc.pkg.tar.gz 安装下载的abs包，或新编译的本地abc包&lt;/p&gt;

&lt;p&gt;pacman-optimize &amp;amp;&amp;amp; sync 提高数据库访问速度&lt;/p&gt;

&lt;p&gt;==== 提高pacman数据访问 ====&lt;/p&gt;

&lt;h1 id=&quot;pacman-optimize--sync&quot;&gt;pacman-optimize &amp;amp;&amp;amp; sync&lt;/h1&gt;

&lt;p&gt;==== 使用wget ====&lt;/p&gt;

&lt;p&gt;修改/etc/pacman.conf并在其中的[options]&lt;/p&gt;

&lt;p&gt;XferCommand = /usr/bin/wget -c –passive-ftp -c %u&lt;/p&gt;

&lt;p&gt;来自：http://www.douban.com/group/topic/17909752/&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Pacman手册&lt;/p&gt;

&lt;p&gt;名称&lt;/p&gt;

&lt;p&gt;pacman – 软件包管理器&lt;/p&gt;

&lt;p&gt;句法&lt;/p&gt;

&lt;p&gt;pacman &lt;命令&gt; [选项] [软件包名称]&lt;/命令&gt;&lt;/p&gt;

&lt;p&gt;描述&lt;/p&gt;

&lt;p&gt;pacman是linux系统上的用于记录安装的软件包信息的管理器。它的主要特点有：支持依赖、软件包组、安装卸载关联以及与远程服务器同步信息然后更新系统。pacman的软件包格式是.tar.gz的压缩格式。&lt;/p&gt;

&lt;p&gt;3.0.0版以来，pacman一直是linkman:libalpm（即”Arch Linux软件包管理“函数库）的前端。这个函数库支持不同写法的前端（例如，它支持图形化前端）。&lt;/p&gt;

&lt;p&gt;命令&lt;/p&gt;

&lt;p&gt;-Q，–query 查询&lt;/p&gt;

&lt;p&gt;查询软件包数据库。运用这条命令你不仅可以查看已安装软件包以及所含文件的信息，还可以查看独立软件包的元信息（meta-information）（包括软件包的依赖，冲突，安装日期，创建日期，大小）。这条命令可已对本机的软件包数据库执行，也可以对独立的.tar.gz包执行。具体参看下面的查询选项。&lt;/p&gt;

&lt;p&gt;-R, –remove 移除&lt;/p&gt;

&lt;p&gt;从系统中移除某个软件包。该命令也可以对软件包组执行，执行后，软件包组内所有的软件包都会被移除。属于指定软件包的文件会被删除，而后软件包数据库会执行更新。除非加上–nosave(不保存)选项，移除软件包的配置文件都会以.pacsave的后缀保存。具体参看下面的移除选项。&lt;/p&gt;

&lt;p&gt;-S, –sync 同步&lt;/p&gt;

&lt;p&gt;同步软件包。软件包是从frp服务器上直接下载安装的，与之一同安装的还有运行软件所需的所有依赖。例如，pacman -S qt 会下载并安装qt以及qt的所有依赖。如果同一名称的软件包存在与不同的源中，可以指定源：pacman -S testing/qt。同样也可以给定版本要求：pacman -S “bash&amp;gt;=3.2”（引号是必需的，否则设shell会将“&amp;gt;”理解为重定向）。&lt;/p&gt;

&lt;p&gt;可以指定软件包，也可以指定软件包组。例如，如果gnome是一个已定义的软件包组，那么执行pacman -S gnome就会将gnome组中所有的软件包安装，当然也会安装这些软件包的依赖。&lt;/p&gt;

&lt;p&gt;pacman也可以处理一些具有相同或相近作用的软件包。例如，执行pacman -S foo，pacman首先会搜索名为foo的软件包。如果没有找到的话，pacman就会搜索一些具有相同或相近作用的软件包。如果找到了具有相同或相近作用的软件包，这些软件包就会被安装。&lt;/p&gt;

&lt;p&gt;你也可以用pacman -Su来升级本机上所有陈旧的软件包升级是这样进行的：pacman先将本机上的软件包同远程服务器上的软件包进行版本对比。版本对比是按照如下规则进行的：&lt;/p&gt;

&lt;p&gt;字母顺序：&lt;/p&gt;

&lt;p&gt;1.0a&amp;lt;1.0alpha&amp;lt;1.0b&amp;lt;1.0beta&amp;lt;1.0p&amp;lt;1.0pre&amp;lt;1.0rc&amp;lt;1.0&lt;/p&gt;

&lt;p&gt;数字顺序：&lt;/p&gt;

&lt;p&gt;1&amp;lt;1.0&amp;lt;1.1&amp;lt;1.1.1&amp;lt;1.2&amp;lt;2.0&amp;lt;3.0.0&lt;/p&gt;

&lt;p&gt;-U, –update&lt;/p&gt;

&lt;p&gt;升级软件包，或安装软件包。可以给定一个URL网址，也可以给定一个文件路径。升级的过程是一个“移除，然后安装”的过程。想知道pacman如何处理配置文件，请查看处理配置文件&lt;/p&gt;

&lt;p&gt;-V, –version 版本&lt;/p&gt;

&lt;p&gt;显示版本，然后退出。&lt;/p&gt;

&lt;p&gt;-h， –help 帮助&lt;/p&gt;

&lt;p&gt;显示给定命令的句法。如果没有给定命令，显示的将是全部命令的句法。&lt;/p&gt;

&lt;p&gt;通用选项&lt;/p&gt;

&lt;p&gt;–asdeps [as dependency(作为依赖)]&lt;/p&gt;

&lt;p&gt;模糊安装软件包;换句话说，就是假定该软件包安装的原因是由于依赖。在使用makepkg以及其他从源代码编译的工具时，需要在编译一个软件包之前安装该软件包的依赖，这时候，这个命令选项就十分有用了。&lt;/p&gt;

&lt;p&gt;–asexplicit&lt;/p&gt;

&lt;p&gt;精确安装软件;换句话说，就是假定该软件包安装的原因是精确安装。如果想把一个依赖标记成精确安装，使它不会在执行带–recursive（递归）的移除命令时删除，这时候，这个命令选项就十分有用了。&lt;/p&gt;

&lt;p&gt;-b, –dbpath &lt;路径&gt;   指定另外的数据库位置;默认为/var/lib/pacman，路径为绝对路径。&lt;/路径&gt;&lt;/p&gt;

&lt;p&gt;-d, –nodeps            略过所有依赖关系检查-&lt;/p&gt;

&lt;p&gt;-f, –force               强制安装，覆盖存在冲突的文件（谨慎使用）;&lt;/p&gt;

&lt;p&gt;-r， –root &lt;路径&gt;    指定其他的根路径;用于向暂时挂载的其他系统根路径安装软件。&lt;/路径&gt;&lt;/p&gt;

&lt;p&gt;-v, –verbose          输出路径，例如根路径，配置文件，数据库，缓存的路径等。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; –cachedir &amp;lt;dir&amp;gt; 指定其他缓存路径;默认为/var/cache/pacman/pkg，路径为绝对路径。

 –config &amp;lt;路径&amp;gt;  指定另外的配置文件

 –logfile &amp;lt;路径&amp;gt; 指定另外的日志文件

 –noconfirm      不询问确认

 –noprogressbar  下载文件时不显示进度条

 –noscriptlet    不执行安装脚本集（谨慎使用）;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查询选项&lt;/p&gt;

&lt;p&gt;-c, –changelog      查看某软件包的更新日志&lt;/p&gt;

&lt;p&gt;-d, –deps           列出所有作为依赖关系安装的软件包&lt;/p&gt;

&lt;p&gt;-e, –explicit       列出所有单独指定安装的软件包&lt;/p&gt;

&lt;p&gt;-g, –groups         查看某软件包组所属的所有软件包&lt;/p&gt;

&lt;p&gt;-i, –info           查看软件包信息（-ii 查看备份文件）&lt;/p&gt;

&lt;p&gt;-l, –list           列出被查询软件包的内容&lt;/p&gt;

&lt;p&gt;-m, –foreign        列出没有在同步数据库时找到的已安装软件包&lt;/p&gt;

&lt;p&gt;-o, –owns &lt;文件&gt;     查询哪个软件包拥有  &lt;文件&gt;&lt;/文件&gt;&lt;/文件&gt;&lt;/p&gt;

&lt;p&gt;-p, –file &lt;软件包&gt;   从某个软件包而不是数据库查询&lt;/软件包&gt;&lt;/p&gt;

&lt;p&gt;-q, –quiet          在查询或搜索时显示较少的信息&lt;/p&gt;

&lt;p&gt;-s, –search &lt;regex&gt; 搜寻符合指定字符串的已安装本地的软件包&lt;/regex&gt;&lt;/p&gt;

&lt;p&gt;-t, –unrequired     列出所有不被其他软件包要求的软件包&lt;/p&gt;

&lt;p&gt;-u, –upgrades       列出所有可升级的软件包&lt;/p&gt;

&lt;p&gt;-p，–file           在命令行标记软件包为文件，而不是数据库信息条目，在与–info和–list搭配时有用。&lt;/p&gt;

&lt;p&gt;移除选项&lt;/p&gt;

&lt;p&gt;-c, –cascade        删除软件包及所有的依赖于此的软件包&lt;/p&gt;

&lt;p&gt;-k, –dbonly         只删除数据库记录，不删除文件&lt;/p&gt;

&lt;p&gt;-n, –nosave         同时删除配置文件&lt;/p&gt;

&lt;p&gt;-s, –recursive      同时删除（不会破坏其他软件包的）依赖关系&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                   (-ss·也包括单独指定安装的依赖关系)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;-u, –unneeded       同时删除不需要的（且不会破坏其他软件包的）依赖关系&lt;/p&gt;

&lt;p&gt;同步选项&lt;/p&gt;

&lt;p&gt;-c, –clean          从缓存目录中删除旧软件包（-cc 清除所有）&lt;/p&gt;

&lt;p&gt;-g, –groups         查看某软件包组所属的所有软件包&lt;/p&gt;

&lt;p&gt;-i, –info           查看软件包信息&lt;/p&gt;

&lt;p&gt;-l, –list &lt;软件仓库&gt;    查看在该软件仓库中的软件包清单&lt;/软件仓库&gt;&lt;/p&gt;

&lt;p&gt;-q, –quiet          在查询或搜索时显示较少的信息&lt;/p&gt;

&lt;p&gt;-p, –print-uris     打印指定软件包及依赖关系中的URI&lt;/p&gt;

&lt;p&gt;-s, –search &lt;regex表达式&gt; 按照指定字符串查询远端软件仓库&lt;/regex表达式&gt;&lt;/p&gt;

&lt;p&gt;-u, –sysupgrade     升级所有过期软件包&lt;/p&gt;

&lt;p&gt;-w, –downloadonly   下载但不安装/升级软件包&lt;/p&gt;

&lt;p&gt;-y, –refresh        从服务器下载新的软件包数据库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  –needed         不重新安装已经为最新的软件包

  –ignore &amp;lt;软件包&amp;gt;   升级时忽略某个软件包（可多次使用）

  –ignoregroup &amp;lt;软件包组&amp;gt;

                     升级时忽略某个软件包组（可多次使用）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>zjgcjy</name></author><category term="pacman" /><summary type="html">pacman 手册 archlinux pacman 命令 arch wiki pacman -Sy 仅同步源 pacman -Syu 同步源，并更新系统 pacman -Su –ignore foo 升级时不升级包foo pacman -S abc 从本地数据库中得到abc的信息，下载安装abc包 pacman -Sy abc 和源同步后安装名为abc的包 pacman -Sd abc 忽略依赖性问题，安装包abc pacman -Sf abc 强制安装包abc pacman -Si abc 从数据库中搜索包abc的信息 pacman -Ss abc 搜索有关abc信息的包 pacman -Sg abc 查询abc这个包组包含的软件包 pacman -Sw abc 下载包而不安装它 pacman -R abc 删除abc包 pacman -Rc abc 删除abc包和依赖abc的包 pacman -Rsn abc 删除包所有不需要的依赖包并删除其配置文件 pacman -Rscn abc 删除abc包所有不需要的依赖包和依赖abd的包并删除其配置文件 pacman -Sc 清理/var/cache/pacman/pkg目录下的旧包 pacman -Scc 清除所有下载的包和数据库 pacman -Q 列出系统中所有的包 pacman -Q package 在本地包数据库搜索(查询)指定软件包 pacman -Qi package 在本地包数据库搜索(查询)指定软件包并列出相关信息 pacman -Q wc -l 统计当前系统中的包数量 pacman -Qdt 找出孤立包 pacman -Rns $(pacman -Qtdq) 删除孤立软件包（递归的,小心用) pacman -U abc.pkg.tar.gz 安装下载的abs包，或新编译的本地abc包 pacman-optimize &amp;amp;&amp;amp; sync 提高数据库访问速度 ==== 提高pacman数据访问 ==== pacman-optimize &amp;amp;&amp;amp; sync ==== 使用wget ==== 修改/etc/pacman.conf并在其中的[options] XferCommand = /usr/bin/wget -c –passive-ftp -c %u 来自：http://www.douban.com/group/topic/17909752/ Pacman手册 名称 pacman – 软件包管理器 句法 pacman [选项] [软件包名称] 描述 pacman是linux系统上的用于记录安装的软件包信息的管理器。它的主要特点有：支持依赖、软件包组、安装卸载关联以及与远程服务器同步信息然后更新系统。pacman的软件包格式是.tar.gz的压缩格式。 3.0.0版以来，pacman一直是linkman:libalpm（即”Arch Linux软件包管理“函数库）的前端。这个函数库支持不同写法的前端（例如，它支持图形化前端）。 命令 -Q，–query 查询 查询软件包数据库。运用这条命令你不仅可以查看已安装软件包以及所含文件的信息，还可以查看独立软件包的元信息（meta-information）（包括软件包的依赖，冲突，安装日期，创建日期，大小）。这条命令可已对本机的软件包数据库执行，也可以对独立的.tar.gz包执行。具体参看下面的查询选项。 -R, –remove 移除 从系统中移除某个软件包。该命令也可以对软件包组执行，执行后，软件包组内所有的软件包都会被移除。属于指定软件包的文件会被删除，而后软件包数据库会执行更新。除非加上–nosave(不保存)选项，移除软件包的配置文件都会以.pacsave的后缀保存。具体参看下面的移除选项。 -S, –sync 同步 同步软件包。软件包是从frp服务器上直接下载安装的，与之一同安装的还有运行软件所需的所有依赖。例如，pacman -S qt 会下载并安装qt以及qt的所有依赖。如果同一名称的软件包存在与不同的源中，可以指定源：pacman -S testing/qt。同样也可以给定版本要求：pacman -S “bash&amp;gt;=3.2”（引号是必需的，否则设shell会将“&amp;gt;”理解为重定向）。 可以指定软件包，也可以指定软件包组。例如，如果gnome是一个已定义的软件包组，那么执行pacman -S gnome就会将gnome组中所有的软件包安装，当然也会安装这些软件包的依赖。 pacman也可以处理一些具有相同或相近作用的软件包。例如，执行pacman -S foo，pacman首先会搜索名为foo的软件包。如果没有找到的话，pacman就会搜索一些具有相同或相近作用的软件包。如果找到了具有相同或相近作用的软件包，这些软件包就会被安装。 你也可以用pacman -Su来升级本机上所有陈旧的软件包升级是这样进行的：pacman先将本机上的软件包同远程服务器上的软件包进行版本对比。版本对比是按照如下规则进行的： 字母顺序： 1.0a&amp;lt;1.0alpha&amp;lt;1.0b&amp;lt;1.0beta&amp;lt;1.0p&amp;lt;1.0pre&amp;lt;1.0rc&amp;lt;1.0 数字顺序： 1&amp;lt;1.0&amp;lt;1.1&amp;lt;1.1.1&amp;lt;1.2&amp;lt;2.0&amp;lt;3.0.0 -U, –update 升级软件包，或安装软件包。可以给定一个URL网址，也可以给定一个文件路径。升级的过程是一个“移除，然后安装”的过程。想知道pacman如何处理配置文件，请查看处理配置文件 -V, –version 版本 显示版本，然后退出。 -h， –help 帮助 显示给定命令的句法。如果没有给定命令，显示的将是全部命令的句法。 通用选项 –asdeps [as dependency(作为依赖)] 模糊安装软件包;换句话说，就是假定该软件包安装的原因是由于依赖。在使用makepkg以及其他从源代码编译的工具时，需要在编译一个软件包之前安装该软件包的依赖，这时候，这个命令选项就十分有用了。 –asexplicit 精确安装软件;换句话说，就是假定该软件包安装的原因是精确安装。如果想把一个依赖标记成精确安装，使它不会在执行带–recursive（递归）的移除命令时删除，这时候，这个命令选项就十分有用了。 -b, –dbpath 指定另外的数据库位置;默认为/var/lib/pacman，路径为绝对路径。 -d, –nodeps 略过所有依赖关系检查- -f, –force 强制安装，覆盖存在冲突的文件（谨慎使用）; -r， –root 指定其他的根路径;用于向暂时挂载的其他系统根路径安装软件。 -v, –verbose 输出路径，例如根路径，配置文件，数据库，缓存的路径等。 –cachedir &amp;lt;dir&amp;gt; 指定其他缓存路径;默认为/var/cache/pacman/pkg，路径为绝对路径。 –config &amp;lt;路径&amp;gt; 指定另外的配置文件 –logfile &amp;lt;路径&amp;gt; 指定另外的日志文件 –noconfirm 不询问确认 –noprogressbar 下载文件时不显示进度条 –noscriptlet 不执行安装脚本集（谨慎使用）; 查询选项 -c, –changelog 查看某软件包的更新日志 -d, –deps 列出所有作为依赖关系安装的软件包 -e, –explicit 列出所有单独指定安装的软件包 -g, –groups 查看某软件包组所属的所有软件包 -i, –info 查看软件包信息（-ii 查看备份文件） -l, –list 列出被查询软件包的内容 -m, –foreign 列出没有在同步数据库时找到的已安装软件包 -o, –owns 查询哪个软件包拥有 -p, –file 从某个软件包而不是数据库查询 -q, –quiet 在查询或搜索时显示较少的信息 -s, –search 搜寻符合指定字符串的已安装本地的软件包 -t, –unrequired 列出所有不被其他软件包要求的软件包 -u, –upgrades 列出所有可升级的软件包 -p，–file 在命令行标记软件包为文件，而不是数据库信息条目，在与–info和–list搭配时有用。 移除选项 -c, –cascade 删除软件包及所有的依赖于此的软件包 -k, –dbonly 只删除数据库记录，不删除文件 -n, –nosave 同时删除配置文件 -s, –recursive 同时删除（不会破坏其他软件包的）依赖关系 (-ss·也包括单独指定安装的依赖关系) -u, –unneeded 同时删除不需要的（且不会破坏其他软件包的）依赖关系 同步选项 -c, –clean 从缓存目录中删除旧软件包（-cc 清除所有） -g, –groups 查看某软件包组所属的所有软件包 -i, –info 查看软件包信息 -l, –list 查看在该软件仓库中的软件包清单 -q, –quiet 在查询或搜索时显示较少的信息 -p, –print-uris 打印指定软件包及依赖关系中的URI -s, –search 按照指定字符串查询远端软件仓库 -u, –sysupgrade 升级所有过期软件包 -w, –downloadonly 下载但不安装/升级软件包 -y, –refresh 从服务器下载新的软件包数据库 –needed 不重新安装已经为最新的软件包 –ignore &amp;lt;软件包&amp;gt; 升级时忽略某个软件包（可多次使用） –ignoregroup &amp;lt;软件包组&amp;gt; 升级时忽略某个软件包组（可多次使用）</summary></entry><entry><title type="html">十月日记</title><link href="https://zjgcjy.github.io/posts/2019-10/%E5%8D%81%E6%9C%88%E6%97%A5%E8%AE%B0.html" rel="alternate" type="text/html" title="十月日记" /><published>2019-10-02T21:15:00+08:00</published><updated>2019-10-02T21:15:00+08:00</updated><id>https://zjgcjy.github.io/posts/2019-10/%E5%8D%81%E6%9C%88%E6%97%A5%E8%AE%B0</id><content type="html" xml:base="https://zjgcjy.github.io/posts/2019-10/%E5%8D%81%E6%9C%88%E6%97%A5%E8%AE%B0.html">&lt;blockquote&gt;
  &lt;p&gt;每日所作所得&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;10月1日&quot;&gt;10月1日&lt;/h1&gt;

&lt;p&gt;周日，上课前最后一天，算是给自己放了最后一天假期&lt;/p&gt;

&lt;h1 id=&quot;10月2日&quot;&gt;10月2日&lt;/h1&gt;

&lt;p&gt;上了第一天的课，主要是os，一脸蒙蔽。&lt;/p&gt;</content><author><name>zjgcjy</name></author><category term="日记" /><summary type="html">每日所作所得 10月1日 周日，上课前最后一天，算是给自己放了最后一天假期 10月2日 上了第一天的课，主要是os，一脸蒙蔽。</summary></entry><entry><title type="html">Anti Antivirus Technology Offensive And Defensive Notes 1</title><link href="https://zjgcjy.github.io/posts/2019-08/Anti-AntiVirus-Technology-Offensive-and-Defensive-Notes-1.html" rel="alternate" type="text/html" title="Anti Antivirus Technology Offensive And Defensive Notes 1" /><published>2019-08-08T16:14:00+08:00</published><updated>2019-08-08T16:14:00+08:00</updated><id>https://zjgcjy.github.io/posts/2019-08/Anti-AntiVirus-Technology-Offensive-and-Defensive-Notes-1</id><content type="html" xml:base="https://zjgcjy.github.io/posts/2019-08/Anti-AntiVirus-Technology-Offensive-and-Defensive-Notes-1.html">&lt;blockquote&gt;
  &lt;p&gt;黑客免杀攻防读书笔记&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;第一章&quot;&gt;第一章&lt;/h1&gt;

&lt;p&gt;免杀不只是特征码，所谓特征码就是病毒或木马所特有的一段二进制代码，杀毒软件所用的特征码是异常复杂的，通常包括数据特征片段和一定的逻辑判断机制组合而成。&lt;/p&gt;

&lt;p&gt;关于免杀的分类，主要分为三种。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;行为免杀，通过控制病毒木马的行为来躲过杀毒软件的检测，用到的技术之一就是Rootkit。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;关于杀毒软件的发展，其中之一是注重其功能性，加入人工智能和云计算等技术思想；另一类是脱离系统，向硬件靠拢，将后门安装在BIOS中，实现小型化和精确化。&lt;/p&gt;

&lt;h1 id=&quot;第二章&quot;&gt;第二章&lt;/h1&gt;

&lt;p&gt;免杀的相关基础知识，&lt;/p&gt;</content><author><name>zjgcjy</name></author><category term="免杀" /><summary type="html">黑客免杀攻防读书笔记 第一章 免杀不只是特征码，所谓特征码就是病毒或木马所特有的一段二进制代码，杀毒软件所用的特征码是异常复杂的，通常包括数据特征片段和一定的逻辑判断机制组合而成。 关于免杀的分类，主要分为三种。 行为免杀，通过控制病毒木马的行为来躲过杀毒软件的检测，用到的技术之一就是Rootkit。 关于杀毒软件的发展，其中之一是注重其功能性，加入人工智能和云计算等技术思想；另一类是脱离系统，向硬件靠拢，将后门安装在BIOS中，实现小型化和精确化。 第二章 免杀的相关基础知识，</summary></entry><entry><title type="html">八月日记</title><link href="https://zjgcjy.github.io/posts/2019-08/%E5%85%AB%E6%9C%88%E6%97%A5%E8%AE%B0.html" rel="alternate" type="text/html" title="八月日记" /><published>2019-08-01T09:35:00+08:00</published><updated>2019-08-01T09:35:00+08:00</updated><id>https://zjgcjy.github.io/posts/2019-08/%E5%85%AB%E6%9C%88%E6%97%A5%E8%AE%B0</id><content type="html" xml:base="https://zjgcjy.github.io/posts/2019-08/%E5%85%AB%E6%9C%88%E6%97%A5%E8%AE%B0.html">&lt;blockquote&gt;
  &lt;p&gt;每日所作所得&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;8月1日&quot;&gt;8月1日&lt;/h1&gt;

&lt;p&gt;上午和学姐讨论，准备支持学姐的工作，讨论下接下来应该做什么。
下午电脑在更新，更新了半天。。。
然后晚上取打球了，回来之后vm打不开了，win10更新了sandbox和docker以及wsl2，环境又崩了。无语，在弄环境。&lt;/p&gt;

&lt;h1 id=&quot;8月2日&quot;&gt;8月2日&lt;/h1&gt;

&lt;p&gt;上午继续装环境，然后10点多又和学姐讨论了接下来的工作，也和黄老师聊了下自己的方向和接下来的进展。下午系统更新了，hyper -v虚拟化是真的垃圾，不好用啊，花了好长时间才卸载完。&lt;/p&gt;

&lt;h1 id=&quot;8月3日&quot;&gt;8月3日&lt;/h1&gt;

&lt;p&gt;周六，今天有xctf的比赛，看了一下，简单做了一个逆向和一个misc。下午看了后面2个逆向，不想做了，状态不怎么好，感冒很不舒服。
晚上把外面位置都打扫了一边，开始把东西搬出来。&lt;/p&gt;

&lt;h1 id=&quot;8月4日&quot;&gt;8月4日&lt;/h1&gt;

&lt;p&gt;一直在忙着搬东西，下午才弄好。然后开始配网络，试了好久就是不能配ipv6，很烦。
快到晚上的时候才弄出来，用了2个路由器，第一个当中继，第二个做路由器，结果还行。&lt;/p&gt;

&lt;h1 id=&quot;8月5日&quot;&gt;8月5日&lt;/h1&gt;

&lt;p&gt;上午开了组会，确定了这周要弄的东西，我自己也开始准备搞学姐的实验了。下午首先去试了一个样例的运行结果，遇到一些问题，和学姐讨论了。
下午主要攻克编译链接的问题，编译老是有问题，最后是安装好了vs2005下的masm32的，实现了编译的过程。晚上把脚本写好了，对20000个程序进行编译。&lt;/p&gt;

&lt;h1 id=&quot;8月6日&quot;&gt;8月6日&lt;/h1&gt;

&lt;p&gt;昨天晚上走的时候看见编译结果了，大约有6000多个编译失败了，走的时候开了日志重新编译。
今天早上去看了一下，发现是测试指令的问题，暂时没有解决办法，所以先写个脚本把这些有问题的单独抽出来吧。然后改了编译指令，重新再编译一次。
中午重新修改了脚本，最后得到5811个样例测试失败，筛出来后，大致看了下指令的分类，主要是一些奇怪的指令不能通过编译。
下午收到邮件说服务器被重置了，不明觉厉，ss需要重启一下，我晕。
晚上下定决定买了surface pro 6 i5+8+256。心疼，等到了再买配件好了。&lt;/p&gt;

&lt;h1 id=&quot;8月7日&quot;&gt;8月7日&lt;/h1&gt;

&lt;p&gt;上午基本没干嘛，效率有点低。
中午开始编译批量编译用的框架并开始测试windbg用的脚本，希望一切顺利吧。
不顺利，进行重命名的批量化工作。下午把批量化命名的工作都做完了，重新装了windbg，配好了调试环境，晚上准备写脚本然后进行自动化获取。
在如何进行批量执行的过程中，遇到的问题有：windbg脚本学习问题，windbg命令执行失败的问题（最后也没解决，但是能取巧）Unicode环境下宽字节处理问题，ShellExecute异步执行的问题。
整理了一下，好像没什么问题，准备去跑18000个了。&lt;/p&gt;

&lt;h1 id=&quot;8月8日&quot;&gt;8月8日&lt;/h1&gt;

&lt;p&gt;早上过来看了结果，服了，只编译了2329个，这是真的慢。日志显示凌晨5点就停了，不知道为啥。
为了批量执行同时控制区间，上午重新修改了starter的脚本，然后准备去测试。
下午就等他自动跑完所有的测试样例就行了，然后每过一会去看下有没有什么问题。
黄老师让我帮他调研源代码级的免杀资料，好吧，借这个机会把那本书看一下。
去看了在跑的程序，跑到2点多就停了，后来又试了几个，确实跑不起来，调试了一下，我醉了，抛出了异常，由于之前没有改名，找不到源代码，这里是我失策了。去整理了下做的东西，然后开始重新编译生成文件，吃完饭回来重新批量执行。&lt;/p&gt;

&lt;h1 id=&quot;8月9日&quot;&gt;8月9日&lt;/h1&gt;

&lt;p&gt;今天上午来看了执行结果，结果发现有很多有问题，然后重新修改了代码，采用了一个取巧的方式，直接在starter中判断当前的循环次数是不是2，如果是2就说明碰到异常，然后采取和完整测试一样的逻辑恢复控制变量。然后就等着继续跑就行了。
下午电脑到了，happy。&lt;/p&gt;

&lt;h1 id=&quot;8月10日&quot;&gt;8月10日&lt;/h1&gt;

&lt;p&gt;上午主要在装环境，测试surface，下午也是。把vs装完之后就去打球了，达到8点多，洗完澡和张翔去MacDonald，他请客哈哈。
晚上回到所里开始贴膜，爱惜我的surface。
走之前去看了学姐的实验，基本没问题，就是有2个程序卡住了，不知道为啥没断下来。暂时没仔细研究。&lt;/p&gt;

&lt;h1 id=&quot;8月11日&quot;&gt;8月11日&lt;/h1&gt;

&lt;p&gt;今天上午主要在摸鱼，然后把tpye cover和surface pen进行了测试，还是很舒服的。这两天花的钱太多了，吃土了妈的。
下午和晚上在继续装系统和虚拟机。晚上去看了机器，发现又卡住了，懵逼了，&lt;/p&gt;

&lt;h1 id=&quot;8月12日&quot;&gt;8月12日&lt;/h1&gt;

&lt;p&gt;一周总结，编译问题，windbg脚本问题，windbg程序问题，windbg命令执行失败的问题（最后也没解决，但是能取巧：运行程序名）Unicode环境下宽字节处理问题，ShellExecute异步执行的问题，程序异常的问题，修改守护进程脚本，最后编译了13601个。也成功运行记录了状态信息。
今天上午开了组会，确定了这周的任务。一是继续跑学姐的实验，二是继续调xen的环境，三是帮老师调研信息。
下午继续看学姐的实验问题，主要把测试环境给打包，方便下一步进行测试，同时和学姐讨论了下一步的工作，主要对xen进行测试，但是我试了很长时间，那台机器上的xen老是起不来东西，就很烦。
然后和学姐讨论了用我那边的机器。
晚上继续调试机器，xen上的环境怎么也装不上去，无语。&lt;/p&gt;

&lt;h1 id=&quot;8月13日&quot;&gt;8月13日&lt;/h1&gt;

&lt;p&gt;上午继续去装xen的环境，后来想想算了，直接静态编译好了，于是就搞起来了。编译完去试了发现还是不行，貌似是学姐电脑问题，就很烦。还没有试我自己的。
下午开始弄黄老师的报告，同时也继续弄学姐的环境，还去调了一下xen的问题，发现调试是真的卡，就很烦。简单用exp打了一下，发现没什么问题。晚上准备把学姐那个环境跑起来，争取能有进度，最后不停重启网络，然后xen里面可以连到外面了，设置好了之后快8点的时候开始跑起来了。
&lt;strong&gt;我要充电&lt;/strong&gt;
过了一会又去看跑的结果，发现又卡住了，服了，说什么未证明的开发者，调了IE的安全模式还是不行。还好激活了系统，最后是设置了组策略，终于弄好了。&lt;/p&gt;

&lt;h1 id=&quot;8月14日&quot;&gt;8月14日&lt;/h1&gt;

&lt;p&gt;上午回来继续看了学姐的那个实验，没啥问题，然后继续调研黄老师说的免杀技术研究，感觉调研的都不是最新的技术，不过确实免杀最近比较少了。
下午也是继续整理免杀的资料，主要是2篇文档吧，最后总结了一些东西，然后和黄老师交流了，接下来又给了新的任务。主要是black hat会议的相关内容，还要去做个实验，是ccl特征码定位的实验，好烦，论文还没看。&lt;/p&gt;

&lt;h1 id=&quot;8月15日&quot;&gt;8月15日&lt;/h1&gt;

&lt;p&gt;今天主要在打比赛，准备拿个名次的，然后上午做了一个re，又是llvm的，服了。还看了下misc的东西，无感。
下午继续做第二个re，卧槽我真是菜的不行，给了源码都看不懂，仔细分析之后才发现一个是求开平方，一个是求素数，妈耶。继续看了几个其他的misc，果然i春秋的比赛就是煞笔的不行。下午的时候，学姐xen那边的东西终于跑完了。
今天晚上回去的比较早，主要是去了趟麦当劳，然后又是中元节就想早点走了。除此以外看了免杀的书，开始弄下win的环境，好多东西没看啊，我是真的想充电，好烦啊。走的时候一叶飘零又找我去讲课，无奈又是时间冲突，去不了啊。&lt;/p&gt;

&lt;h1 id=&quot;8月16日&quot;&gt;8月16日&lt;/h1&gt;

&lt;p&gt;今天上午主要开始英语报名，然后又是接着搭建环境。我表示心很累。
下午在看免杀的东西，然后林大佬扔过来一个样本，简单分析了一下。学到了挺多东西的。我还是太菜了。&lt;/p&gt;

&lt;h1 id=&quot;8月17日&quot;&gt;8月17日&lt;/h1&gt;

&lt;p&gt;今天主要也是在打比赛，打了SUCtf的，晚上总结一下，主要还是逆向分析吧，感觉自己漏洞还是学的太少了，还有静态代码分析的功力不够，密码学的知识也不够。很伤啊。
而且今天知道宿舍是单人间改的双人间，好烦。&lt;/p&gt;

&lt;h1 id=&quot;8月18日&quot;&gt;8月18日&lt;/h1&gt;

&lt;p&gt;打比赛&lt;/p&gt;

&lt;h1 id=&quot;8月19日&quot;&gt;8月19日&lt;/h1&gt;

&lt;p&gt;今天主要开了组会，和学姐交接了相关内容，然后开始继续自己的学习工作，同时看了几个wp，整体而言效率不是很高，因为国科大分配宿舍的事情，搞得人心惶惶。&lt;/p&gt;

&lt;h1 id=&quot;8月20日&quot;&gt;8月20日&lt;/h1&gt;

&lt;p&gt;今天是周二，效率不是很高，哈哈。其实是后来忘记做了啥事情了。&lt;/p&gt;

&lt;h1 id=&quot;8月21日&quot;&gt;8月21日&lt;/h1&gt;

&lt;p&gt;今天周三，上午做了事情，下午就出去嗨了，没做多少事情。&lt;/p&gt;

&lt;h1 id=&quot;8月22日&quot;&gt;8月22日&lt;/h1&gt;

&lt;p&gt;今天是搬家的一天，一大早坐车来了雁栖湖，这是真的累。下午就在搬家然后做事情，没干什么正事。晚上去打球了，还是很舒服的，体验了一下雁栖湖的生活。&lt;/p&gt;

&lt;h1 id=&quot;8月23日&quot;&gt;8月23日&lt;/h1&gt;

&lt;p&gt;一大早就出去跑步了，然后准备今天下午的比赛。先看了巨神的题目，我想弃坑。&lt;/p&gt;

&lt;h1 id=&quot;8月24日&quot;&gt;8月24日&lt;/h1&gt;

&lt;p&gt;做了一天的比赛，比赛结束后算是打了3个题。&lt;/p&gt;

&lt;h1 id=&quot;8月25日&quot;&gt;8月25日&lt;/h1&gt;

&lt;p&gt;打比赛，oppo的，做了一个压缩算法的题，lz77？没搞出来。后来做了一个nsis的程序逆向，学到了新知识。&lt;/p&gt;

&lt;h1 id=&quot;8月26日&quot;&gt;8月26日&lt;/h1&gt;

&lt;p&gt;做了m4x大哥出的题目，然后晚上去打球了，回来把衣服也洗完了。&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;</content><author><name>zjgcjy</name></author><category term="日记" /><summary type="html">每日所作所得 8月1日 上午和学姐讨论，准备支持学姐的工作，讨论下接下来应该做什么。 下午电脑在更新，更新了半天。。。 然后晚上取打球了，回来之后vm打不开了，win10更新了sandbox和docker以及wsl2，环境又崩了。无语，在弄环境。 8月2日 上午继续装环境，然后10点多又和学姐讨论了接下来的工作，也和黄老师聊了下自己的方向和接下来的进展。下午系统更新了，hyper -v虚拟化是真的垃圾，不好用啊，花了好长时间才卸载完。 8月3日 周六，今天有xctf的比赛，看了一下，简单做了一个逆向和一个misc。下午看了后面2个逆向，不想做了，状态不怎么好，感冒很不舒服。 晚上把外面位置都打扫了一边，开始把东西搬出来。 8月4日 一直在忙着搬东西，下午才弄好。然后开始配网络，试了好久就是不能配ipv6，很烦。 快到晚上的时候才弄出来，用了2个路由器，第一个当中继，第二个做路由器，结果还行。 8月5日 上午开了组会，确定了这周要弄的东西，我自己也开始准备搞学姐的实验了。下午首先去试了一个样例的运行结果，遇到一些问题，和学姐讨论了。 下午主要攻克编译链接的问题，编译老是有问题，最后是安装好了vs2005下的masm32的，实现了编译的过程。晚上把脚本写好了，对20000个程序进行编译。 8月6日 昨天晚上走的时候看见编译结果了，大约有6000多个编译失败了，走的时候开了日志重新编译。 今天早上去看了一下，发现是测试指令的问题，暂时没有解决办法，所以先写个脚本把这些有问题的单独抽出来吧。然后改了编译指令，重新再编译一次。 中午重新修改了脚本，最后得到5811个样例测试失败，筛出来后，大致看了下指令的分类，主要是一些奇怪的指令不能通过编译。 下午收到邮件说服务器被重置了，不明觉厉，ss需要重启一下，我晕。 晚上下定决定买了surface pro 6 i5+8+256。心疼，等到了再买配件好了。 8月7日 上午基本没干嘛，效率有点低。 中午开始编译批量编译用的框架并开始测试windbg用的脚本，希望一切顺利吧。 不顺利，进行重命名的批量化工作。下午把批量化命名的工作都做完了，重新装了windbg，配好了调试环境，晚上准备写脚本然后进行自动化获取。 在如何进行批量执行的过程中，遇到的问题有：windbg脚本学习问题，windbg命令执行失败的问题（最后也没解决，但是能取巧）Unicode环境下宽字节处理问题，ShellExecute异步执行的问题。 整理了一下，好像没什么问题，准备去跑18000个了。 8月8日 早上过来看了结果，服了，只编译了2329个，这是真的慢。日志显示凌晨5点就停了，不知道为啥。 为了批量执行同时控制区间，上午重新修改了starter的脚本，然后准备去测试。 下午就等他自动跑完所有的测试样例就行了，然后每过一会去看下有没有什么问题。 黄老师让我帮他调研源代码级的免杀资料，好吧，借这个机会把那本书看一下。 去看了在跑的程序，跑到2点多就停了，后来又试了几个，确实跑不起来，调试了一下，我醉了，抛出了异常，由于之前没有改名，找不到源代码，这里是我失策了。去整理了下做的东西，然后开始重新编译生成文件，吃完饭回来重新批量执行。 8月9日 今天上午来看了执行结果，结果发现有很多有问题，然后重新修改了代码，采用了一个取巧的方式，直接在starter中判断当前的循环次数是不是2，如果是2就说明碰到异常，然后采取和完整测试一样的逻辑恢复控制变量。然后就等着继续跑就行了。 下午电脑到了，happy。 8月10日 上午主要在装环境，测试surface，下午也是。把vs装完之后就去打球了，达到8点多，洗完澡和张翔去MacDonald，他请客哈哈。 晚上回到所里开始贴膜，爱惜我的surface。 走之前去看了学姐的实验，基本没问题，就是有2个程序卡住了，不知道为啥没断下来。暂时没仔细研究。 8月11日 今天上午主要在摸鱼，然后把tpye cover和surface pen进行了测试，还是很舒服的。这两天花的钱太多了，吃土了妈的。 下午和晚上在继续装系统和虚拟机。晚上去看了机器，发现又卡住了，懵逼了， 8月12日 一周总结，编译问题，windbg脚本问题，windbg程序问题，windbg命令执行失败的问题（最后也没解决，但是能取巧：运行程序名）Unicode环境下宽字节处理问题，ShellExecute异步执行的问题，程序异常的问题，修改守护进程脚本，最后编译了13601个。也成功运行记录了状态信息。 今天上午开了组会，确定了这周的任务。一是继续跑学姐的实验，二是继续调xen的环境，三是帮老师调研信息。 下午继续看学姐的实验问题，主要把测试环境给打包，方便下一步进行测试，同时和学姐讨论了下一步的工作，主要对xen进行测试，但是我试了很长时间，那台机器上的xen老是起不来东西，就很烦。 然后和学姐讨论了用我那边的机器。 晚上继续调试机器，xen上的环境怎么也装不上去，无语。 8月13日 上午继续去装xen的环境，后来想想算了，直接静态编译好了，于是就搞起来了。编译完去试了发现还是不行，貌似是学姐电脑问题，就很烦。还没有试我自己的。 下午开始弄黄老师的报告，同时也继续弄学姐的环境，还去调了一下xen的问题，发现调试是真的卡，就很烦。简单用exp打了一下，发现没什么问题。晚上准备把学姐那个环境跑起来，争取能有进度，最后不停重启网络，然后xen里面可以连到外面了，设置好了之后快8点的时候开始跑起来了。 我要充电 过了一会又去看跑的结果，发现又卡住了，服了，说什么未证明的开发者，调了IE的安全模式还是不行。还好激活了系统，最后是设置了组策略，终于弄好了。 8月14日 上午回来继续看了学姐的那个实验，没啥问题，然后继续调研黄老师说的免杀技术研究，感觉调研的都不是最新的技术，不过确实免杀最近比较少了。 下午也是继续整理免杀的资料，主要是2篇文档吧，最后总结了一些东西，然后和黄老师交流了，接下来又给了新的任务。主要是black hat会议的相关内容，还要去做个实验，是ccl特征码定位的实验，好烦，论文还没看。 8月15日 今天主要在打比赛，准备拿个名次的，然后上午做了一个re，又是llvm的，服了。还看了下misc的东西，无感。 下午继续做第二个re，卧槽我真是菜的不行，给了源码都看不懂，仔细分析之后才发现一个是求开平方，一个是求素数，妈耶。继续看了几个其他的misc，果然i春秋的比赛就是煞笔的不行。下午的时候，学姐xen那边的东西终于跑完了。 今天晚上回去的比较早，主要是去了趟麦当劳，然后又是中元节就想早点走了。除此以外看了免杀的书，开始弄下win的环境，好多东西没看啊，我是真的想充电，好烦啊。走的时候一叶飘零又找我去讲课，无奈又是时间冲突，去不了啊。 8月16日 今天上午主要开始英语报名，然后又是接着搭建环境。我表示心很累。 下午在看免杀的东西，然后林大佬扔过来一个样本，简单分析了一下。学到了挺多东西的。我还是太菜了。 8月17日 今天主要也是在打比赛，打了SUCtf的，晚上总结一下，主要还是逆向分析吧，感觉自己漏洞还是学的太少了，还有静态代码分析的功力不够，密码学的知识也不够。很伤啊。 而且今天知道宿舍是单人间改的双人间，好烦。 8月18日 打比赛 8月19日 今天主要开了组会，和学姐交接了相关内容，然后开始继续自己的学习工作，同时看了几个wp，整体而言效率不是很高，因为国科大分配宿舍的事情，搞得人心惶惶。 8月20日 今天是周二，效率不是很高，哈哈。其实是后来忘记做了啥事情了。 8月21日 今天周三，上午做了事情，下午就出去嗨了，没做多少事情。 8月22日 今天是搬家的一天，一大早坐车来了雁栖湖，这是真的累。下午就在搬家然后做事情，没干什么正事。晚上去打球了，还是很舒服的，体验了一下雁栖湖的生活。 8月23日 一大早就出去跑步了，然后准备今天下午的比赛。先看了巨神的题目，我想弃坑。 8月24日 做了一天的比赛，比赛结束后算是打了3个题。 8月25日 打比赛，oppo的，做了一个压缩算法的题，lz77？没搞出来。后来做了一个nsis的程序逆向，学到了新知识。 8月26日 做了m4x大哥出的题目，然后晚上去打球了，回来把衣服也洗完了。 #</summary></entry><entry><title type="html">Cpp Prime Plus Learning3</title><link href="https://zjgcjy.github.io/posts/2019-07/CPP-Prime-Plus-Learning3.html" rel="alternate" type="text/html" title="Cpp Prime Plus Learning3" /><published>2019-07-29T19:15:00+08:00</published><updated>2019-07-29T19:15:00+08:00</updated><id>https://zjgcjy.github.io/posts/2019-07/CPP-Prime-Plus-Learning3</id><content type="html" xml:base="https://zjgcjy.github.io/posts/2019-07/CPP-Prime-Plus-Learning3.html">&lt;blockquote&gt;
  &lt;p&gt;C++ Prime Plus 读书笔记3
第7章到第8章 主要是函数&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;函数&quot;&gt;函数&lt;/h1&gt;

&lt;p&gt;C++规定函数的返回值不能是数组。函数原型不需要提供变量名。如果不指定参数列表，应该使用省略号。如果参数不满足原型要求，会自动进行强制类型转换，如果有函数重载则会有二义性。&lt;/p&gt;

&lt;h1 id=&quot;函数和数组&quot;&gt;函数和数组&lt;/h1&gt;

&lt;p&gt;数组传参的基本格式如下。实际上就是指针。函数传递普通的值是变量的拷贝，但是传递数组还是原来那个数组。如果不需要修改数组，可以加上const限定符。且需要指定数组的大小，因为这不是指向整个数组的指针，如果用sizeof查看变量大小，是指针的大小4。&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//int *arr的指针&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;也可以使用基于范围来传参。一般就是首地址和首地址加数组长度作为参数传递。&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;关于指针和const限定符，主要有2种，即常指针和指向常量的指针。在不讨论指针的情况下，可以将const数据或非const数据复制给const指针，不能将const数据赋值给非const指针。所以函数参数尽量是const。&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//指向常量的指针&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//常指针&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//指向常量的常指针&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;函数和二维数组&quot;&gt;函数和二维数组&lt;/h1&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//二维数组传参方式&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意，二维数组是以行为单位创建数组，每个数组再创建一个一维数组。所以二维数组就是3个指向一维数组整体的指针，这里的n是行数。&lt;strong&gt;传参时必须指定列数。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;注意使用RAII，不要在不同的地方析构对象。&lt;/p&gt;

&lt;h1 id=&quot;函数指针&quot;&gt;函数指针&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/tp-16b/p/7860491.html&quot;&gt;浅谈数组指针、指针数组、函数指针、函数指针数组&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;函数名代表了函数的地址。&lt;/strong&gt;函数指针的申明方法：直接将对应的函数申明种函数名改成一个指针即可。&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//p = &amp;amp;pam 代表函数地址&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//*p = pam 代表函数整体吧&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>zjgcjy</name></author><category term="C++" /><summary type="html">C++ Prime Plus 读书笔记3 第7章到第8章 主要是函数 函数 C++规定函数的返回值不能是数组。函数原型不需要提供变量名。如果不指定参数列表，应该使用省略号。如果参数不满足原型要求，会自动进行强制类型转换，如果有函数重载则会有二义性。 函数和数组 数组传参的基本格式如下。实际上就是指针。函数传递普通的值是变量的拷贝，但是传递数组还是原来那个数组。如果不需要修改数组，可以加上const限定符。且需要指定数组的大小，因为这不是指向整个数组的指针，如果用sizeof查看变量大小，是指针的大小4。 int sum_arr(const int arr[], int n);//int *arr的指针 也可以使用基于范围来传参。一般就是首地址和首地址加数组长度作为参数传递。 int sum_arr(const int *begin, const int *end); { const int *pt; for(pt = begin; pt != end; pt++) { ... } } 关于指针和const限定符，主要有2种，即常指针和指向常量的指针。在不讨论指针的情况下，可以将const数据或非const数据复制给const指针，不能将const数据赋值给非const指针。所以函数参数尽量是const。 const int *p = &amp;amp;x;//指向常量的指针 int *const p = &amp;amp;x;//常指针 const int* const p = &amp;amp;x;//指向常量的常指针 函数和二维数组 //二维数组传参方式 int sum(int (*arr)[4], int row); int sum(int arr[][4], int row); int total[3][4] 注意，二维数组是以行为单位创建数组，每个数组再创建一个一维数组。所以二维数组就是3个指向一维数组整体的指针，这里的n是行数。传参时必须指定列数。 注意使用RAII，不要在不同的地方析构对象。 函数指针 浅谈数组指针、指针数组、函数指针、函数指针数组 函数名代表了函数的地址。函数指针的申明方法：直接将对应的函数申明种函数名改成一个指针即可。 double pam(int); double (*p)(int); //p = &amp;amp;pam 代表函数地址 //*p = pam 代表函数整体吧</summary></entry></feed>