(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{491:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("UCAS-IIE-2019-5-Yellow-YCTF writeup")])]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"re1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#re1"}},[t._v("#")]),t._v(" re1")]),t._v(" "),a("blockquote",[a("p",[t._v("考点")]),t._v(" "),a("ul",[a("li",[t._v("rot13")]),t._v(" "),a("li",[t._v("base32")]),t._v(" "),a("li",[t._v("strcmp_asm")])])]),t._v(" "),a("h2",{attrs:{id:"main"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main"}},[t._v("#")]),t._v(" main")]),t._v(" "),a("p",[t._v("首先查看main函数，结果如下。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_10-24-47.png",alt:"Snipaste_2019-05-29_10-24-47"}})]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_10-26-48.png",alt:"Snipaste_2019-05-29_10-26-48"}})]),t._v(" "),a("p",[t._v("包含输入长度判断和两段strcmp汇编形式的判断，其中第一段是不相等，第二段是相等。第一段前进行了"),a("code",[t._v("rot13（offset=14）")]),t._v("编码，两段中间进行了init操作，以及一个关键的check函数。")]),t._v(" "),a("h2",{attrs:{id:"rot13（offset-14）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rot13（offset-14）"}},[t._v("#")]),t._v(" rot13（offset=14）")]),t._v(" "),a("p",[t._v("其中的rot13如下所示，算一下偏移能发现是14。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_10-31-22.png",alt:"Snipaste_2019-05-29_10-31-22"}})]),t._v(" "),a("h2",{attrs:{id:"init"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#init"}},[t._v("#")]),t._v(" init")]),t._v(" "),a("p",[t._v("初始化列表init函数将字符串进行动态修改，逻辑如下，比较简单，最后得到的table是"),a("code",[t._v("NoPqRsTuVwXyZaBcDeFgHiJkLm567234")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_10-29-19.png",alt:"Snipaste_2019-05-29_10-29-19"}})]),t._v(" "),a("h2",{attrs:{id:"base32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#base32"}},[t._v("#")]),t._v(" base32")]),t._v(" "),a("p",[t._v("然后进行关键的base32操作，算法比较明显，和base64差不多，32是2的5次方，8bit乘以5即40bit一组。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_10-34-08.png",alt:"Snipaste_2019-05-29_10-34-08"}})]),t._v(" "),a("h2",{attrs:{id:"求解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#求解"}},[t._v("#")]),t._v(" 求解")]),t._v(" "),a("p",[t._v("分别列出rot13和base32算法即可。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_10-42-41.png",alt:"Snipaste_2019-05-29_10-42-41"}})]),t._v(" "),a("p",[t._v("最后得到 "),a("code",[t._v("Y@u_Kn@W_b@s332_@Nd_r0t13")])]),t._v(" "),a("h1",{attrs:{id:"float"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#float"}},[t._v("#")]),t._v(" float")]),t._v(" "),a("blockquote",[a("p",[t._v("考点")]),t._v(" "),a("ul",[a("li",[t._v("方程")]),t._v(" "),a("li",[t._v("float乘以2")]),t._v(" "),a("li",[t._v("整数和小数分开处理")]),t._v(" "),a("li",[t._v("动态调试")])])]),t._v(" "),a("h2",{attrs:{id:"main-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#main-2"}},[t._v("#")]),t._v(" main")]),t._v(" "),a("p",[t._v("首先查看main函数，定义了一堆奇怪变量。然后对输入进行简单检查，满足一个float形式，且大于0，小于10。小数部分长度是7。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_10-52-12.png",alt:"Snipaste_2019-05-29_10-52-12"}})]),t._v(" "),a("p",[t._v("在输入之后，开始检查，首先判断是不是小数，然后进入关键的check函数，之后和cipher进行对比。最后进行关键的check2判断。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_11-20-15.png",alt:"Snipaste_2019-05-29_11-20-15"}})]),t._v(" "),a("p",[t._v("check1函数将在下面进行详细说明，首先讨论memcmp和check2的部分。这里memcmp的部分就是对check1的结果和cipher进行对比，对比的值就是一开始定义的常量，只不过逐比特逐比特对比。"),a("code",[t._v("(((1 << (v10 & 0x1F)) & *((_DWORD *)v19 + (v10 >> 5))) != 0) == v23[v10]")]),t._v("\n脚本如下。")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''00 01 00 00 00 00 00 00 01 00 01 00 00 00 01 01 \\\n00 00 01 01 00 00 01 01 00 00 01 01 00 00 01 01'''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nc "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncipher "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("xrange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0b'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    cipher "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("hex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rjust"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" cipher\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("得到"),a("code",[t._v("02c5cccc")]),t._v("，也就是"),a("code",[t._v("0xccccc502")]),t._v("所以check1函数对输入进行处理后，返回的结果是这个值。如果满足进行check2，就是一个方程，估计是输入值不止一个，所以这里加了一个条件判断（最后发现是精度检查）。")]),t._v(" "),a("h2",{attrs:{id:"check1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#check1"}},[t._v("#")]),t._v(" check1")]),t._v(" "),a("p",[t._v("在check1函数中，主要分为2个部分，分别对输入的整数部分和小数部分进行处理，两个部分对后续的值都有影响。由于大量代码在float格式下存在优化的问题，导致静态逆向存在很大的困难，所以在解题的时候，我主要采用动态调试的方式。这里分为几个部分说明。\n首先是输入参数，将输入值加上1.234567传入check1函数中。")]),t._v(" "),a("h2",{attrs:{id:"小数部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小数部分"}},[t._v("#")]),t._v(" 小数部分")]),t._v(" "),a("p",[a("code",[t._v("sub_EF12C0")]),t._v("这个函数的作用是对小数部分进行处理，主要使用sse指令进行处理，创建两个结构体，都是用于分配的空间地址。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_14-05-50.png",alt:"Snipaste_2019-05-29_14-05-50"}})]),t._v(" "),a("p",[t._v("这里同时也用到了"),a("code",[t._v("ffloor")]),t._v("函数用于判断输入的整数部分。这里先不讨论整数部分值的情况。大致的算法就是对小数部分进行模拟逼近，从0.5开始逼近，小于则置1，否则置0，然后是0.25，0.125等等。这部分比较好逆向，模拟算法如下，可将小数转换成十六进制（f2h）。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_14-10-03.png",alt:"Snipaste_2019-05-29_14-10-03"}})]),t._v(" "),a("p",[t._v("在逼近结束后，只会产生3个hex值，最后一个hex值和第二个hex值的部分位，将由整数部分输出。")]),t._v(" "),a("h2",{attrs:{id:"整数部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整数部分"}},[t._v("#")]),t._v(" 整数部分")]),t._v(" "),a("p",[t._v("在逆向的过程中，发现整数部分用于判断和2的次方的大小关系，也影响了小数部分的输出值。在"),a("code",[t._v("sub_EF1200")]),t._v("函数中对整数部分进行了检测并返回相应的值，由于输入值在0-9之间，这里我也没详细看，大概判断出是不断乘以2的操作。之间用idapython遍历一下就行。")]),t._v(" "),a("h2",{attrs:{id:"idapython"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#idapython"}},[t._v("#")]),t._v(" idapython")]),t._v(" "),a("p",[t._v("这里就用idapython配合ida，hook自带的dbg，然后动态下断和获取就行了 ，脚本不上了。就9个值，看下结果就行。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_14-27-15.png",alt:"Snipaste_2019-05-29_14-27-15"}})]),t._v(" "),a("p",[t._v("可以看到，和上文所说一致，第一列是输入值，第二列是输入check1的参数，第三列是小数部分的值，第四部分是最后的输出值。\n整数部分主要影响第一个hex的值，从0到9只有"),a("code",[t._v("fc")]),t._v("、"),a("code",[t._v("02")]),t._v("、"),a("code",[t._v("82")]),t._v("三个值，最后的cipher第一个hex是"),a("code",[t._v("02")]),t._v("，可判断大致的输入范围。\n由f2h函数可知，第三列的结果符合模拟算法的结果，而第四列的结果是小数部分的值乘以2。当整数部分的值扩大，每当大于2的次方时，小数部分的值又会乘以2，大致关系就是这样。")]),t._v(" "),a("h2",{attrs:{id:"求解-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#求解-2"}},[t._v("#")]),t._v(" 求解")]),t._v(" "),a("p",[t._v("虽然能大致得到整数部分的范围，但是其中有个4，所以这里需要分类讨论。将cipher的值去掉最后一个hex，同时去掉一位整数部分的影响，得到"),a("code",[t._v("0xccccc4")])]),t._v(" "),a("ul",[a("li",[t._v("如果值大于4，小数部分的值应该是"),a("code",[t._v("0xccccc4")]),t._v("除以8。")]),t._v(" "),a("li",[t._v("如果值小于4，小数部分的值应该是"),a("code",[t._v("0xccccc4")]),t._v("除以4。")])]),t._v(" "),a("p",[t._v("也就是"),a("code",[t._v("0x199998")]),t._v("和"),a("code",[t._v("0x333331")]),t._v("。然后写出f2h的逆算法，h2f如下所示。最后对两种情况分别验证即可。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2019-05/Snipaste_2019-05-29_14-43-45.png",alt:"Snipaste_2019-05-29_14-43-45"}})]),t._v(" "),a("p",[t._v("最后得到"),a("code",[t._v("1.3154329")]),t._v("，输入之后发现不满足check2。一开始以为是哪里弄错了，最后发现是精度不对，改成"),a("code",[t._v("1.3154328")]),t._v("就行了。")])])}),[],!1,null,null,null);s.default=e.exports}}]);