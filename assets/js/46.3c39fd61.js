(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{459:function(s,a,t){"use strict";t.r(a);var n=t(11),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("hr"),s._v(" "),t("blockquote",[t("p",[s._v("《逆向工程核心原理》读书笔记-1")])]),s._v(" "),t("h2",{attrs:{id:"第二章-简单调试helloworld程序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二章-简单调试helloworld程序"}},[s._v("#")]),s._v(" 第二章   简单调试helloworld程序")]),s._v(" "),t("p",[s._v("首先熟悉一下基本过程吧，虽然大部分都知道了，但还是从基础的开始看，逆向就是要慢慢来的，不要急。-_-。\n这里我用的就是ida了，没用od，调试器加载的位置是函数的入口点，不是所谓的主函数地址，一般都是从0x401000开始的，因为涉及到IAD表重定位的问题。而入口点一般在主函数下面。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("call    ___security_init_cookie\njmp     ___tmainCRTStartup\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("主要就2步ASM的过程，第一个call是安全机制检查，应该是canary吧，没详细查过，因为主函数退出之后也有个对吧，应该没错。第二个跳转到mainCRT函数，这是Visual C++启动函数。进入启动函数之后，编译器会做许多前期准备工作，我们要查找的主函数一般靠近最后部分。最明显的标识就是连续push三次了，ia32是这样的，ia64用寄存器可能不相同吧。之后就exit()了，这就是为什么main()里面可以调用exit()直接退出。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("push    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" uType\npush    offset Caption  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"www.reversecore.com"')]),s._v("\npush    offset Text     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World!"')]),s._v("\npush    "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" hWnd\ncall    ds:MessageBoxW\nxor     eax, eax\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("主函数ASM如上，没什么好说的。要注意的地方就是在Win32编程中，VC++默认实用Unicode码，内部都是Unicode系列函数。")])])}),[],!1,null,null,null);a.default=e.exports}}]);