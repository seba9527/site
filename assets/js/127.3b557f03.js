(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{540:function(s,t,a){"use strict";a.r(t);var n=a(11),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("hr"),s._v(" "),a("blockquote",[a("p",[s._v("会用git已经好久，但是熟练程度并不是很好，而且许多用法并不清楚，这么好的分布式管理系统我怎么能不学呢，GitHub上空荡荡的我都不好意思了-_-")])]),s._v(" "),a("h2",{attrs:{id:"git初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git初始化"}},[s._v("#")]),s._v(" git初始化")]),s._v(" "),a("p",[s._v("在安装完成之后，需要最后一步进行设置，直接调用cmd。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zjgcjy"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zjgcjy@gmail.com"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --list     查看当前系统的用户信息（git信息）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"git-创建版本库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-创建版本库"}},[s._v("#")]),s._v(" git 创建版本库")]),s._v(" "),a("p",[s._v("版本库，又名仓库，英文名：repository，git可以用来追踪仓库的变化，简单来说又可以离线进行处理，所以又叫分布式版本控制。")]),s._v(" "),a("h3",{attrs:{id:"创建一个空目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建一个空目录"}},[s._v("#")]),s._v(" 创建一个空目录")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" learngit\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" learngit\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"把这个目录变成git可以管理的目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把这个目录变成git可以管理的目录"}},[s._v("#")]),s._v(" 把这个目录变成git可以管理的目录")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\nInitialized empty Git repository "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" H:/learngit/.git/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("此时的目录下会多一个.git目录，但是是隐藏的，.git是用来跟踪版本的，使用ls -ah可以看到该目录。\n现在我们开始写一个readme.txt文件")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" readme.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" is version control system.\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" is "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" software.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"把文件加到仓库（缓冲）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把文件加到仓库（缓冲）"}},[s._v("#")]),s._v(" 把文件加到仓库（缓冲）")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" readme.txt\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果没有任何显示，基本上表示成功。")]),s._v(" "),a("h3",{attrs:{id:"把文件提交到仓库（提交）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#把文件提交到仓库（提交）"}},[s._v("#")]),s._v(" 把文件提交到仓库（提交）")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit  -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wrote a readme.txt"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("git commit -m 后面跟的是本次提交的说明，git commit提交成功之后会有提示，一个文件被改动，新加入两条指令。\n注意，git commit 一次可以提交许多内容，所以可以多次git add之后，把所有要提交的文件存入缓冲区，然后一次性全部提交。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" file1.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" file2.txt  file3.txt\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit 3 files"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"时光机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时光机"}},[s._v("#")]),s._v(" 时光机")]),s._v(" "),a("p",[s._v("之前已经成功提交了一个文件了，现在要看下版本的问题，什么是版本，如果进行版本的控制，于是，我们继续修改readme.txt文件。")]),s._v(" "),a("h3",{attrs:{id:"再修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#再修改"}},[s._v("#")]),s._v(" 再修改")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("Git is a distributed version control system.\nGit is "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" software.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("然后 git status 查看结果。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" status\nOn branch master\nChanges not staged "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" commit:\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add <file>..."')]),s._v(" to update what will be committed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git checkout -- <file>..."')]),s._v(" to discard changes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" working directory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        modified:   readme.txt\n\nno changes added to commit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add"')]),s._v(" and/or "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git commit -a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"git-diff命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-diff命令"}},[s._v("#")]),s._v(" git diff命令")]),s._v(" "),a("p",[s._v("git status用来查看当前仓库的状态，分支是主线。但是结果还没有提交，git add用来添加，git commit -a用来提交， git checkout用来回滚到初始版本。对于不一样的版本，可以用git diff 命令。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v("\nwarning: LF will be replaced by CRLF "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" readme.txt.\nThe "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" will have its original line endings "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" your working directory.\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" --git a/readme.txt b/readme.txt\nindex "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1668572")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("4d53f0e "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100644")]),s._v("\n--- a/readme.txt\n+++ b/readme.txt\n@@ -1,2 +1,2 @@\n-git is a version control system.\n+git is a distributed version control system.\n "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" is "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" software.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("从上可以很明显的看到对readme.txt进行的操作，第一行加了分布式，其他都没有变。此时再添加提交就行了。")]),s._v(" "),a("h3",{attrs:{id:"再次提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#再次提交"}},[s._v("#")]),s._v(" 再次提交")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"add distributed"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("master 009a23d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" distributed\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" insertion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" deletion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("再次git status的时，git告诉我们当前没有需要提交的修改，而且，工作目录是干净。")]),s._v(" "),a("h2",{attrs:{id:"版本回退与更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本回退与更新"}},[s._v("#")]),s._v(" 版本回退与更新")]),s._v(" "),a("p",[s._v("使用git log命令查看历史提交记录，如果看到的信息太多，可以加参数。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log --pretty"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("oneline\n 39a5195a73869cfe42cfab7fd9be768c185e69af "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" appe    nd GPL\n 009a23d32fd41043cf8e86b842d3c8426aea74b9 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" distributed\n c8b834f0e0fd0967c9fa10793f427ddd392be0be wrote a readme "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"回退"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回退"}},[s._v("#")]),s._v(" 回退")]),s._v(" "),a("p",[s._v("在Git中，必须知道当前的版本，HEAD表示当前的版本，HEAD^表示上一个版本，HEAD^^表示上上一个版本，HEAD~数字，表示以上的某一个版本。\n把当前版本回退到上一个版本，可以使用 git reset命令")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reset --hard HEAD^\nHEAD is now at 009a23d "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" distributed\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("Git版本在内部的更改只是采用更改头指针的方式，所以Git的版本回退速度特别快。")]),s._v(" "),a("h3",{attrs:{id:"更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[s._v("#")]),s._v(" 更新")]),s._v(" "),a("p",[s._v("使用git reflog 命令查看所有的提交记录")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" reflog\n009a23d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(": reset: moving to HEAD^\n39a5195 HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(": commit: append GPL\n009a23d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("HEAD -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(": commit: "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" distributed\nc8b834f HEAD@"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(": commit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("initial"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": wrote a readme "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("可以看到每一条commit id的记录，可以再次使用 git reset --hard commit id（39a5195） 再次更新，回到append GPL版本。")]),s._v(" "),a("h2",{attrs:{id:"工作区与暂存区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工作区与暂存区"}},[s._v("#")]),s._v(" 工作区与暂存区")]),s._v(" "),a("p",[s._v("把文件添加到Git去的时候一共分两步。\n第一步：用 git add 保存到暂存区。 第二步： 用 git commit 提交更改，就是把暂存区的内容提交到当前分支。当创建Git的时候。默认的分支是master，所以提交到master。git status 用来查看修改未被提交的文件，以及未被提交到分支的文件。")]),s._v(" "),a("h2",{attrs:{id:"管理修改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管理修改"}},[s._v("#")]),s._v(" 管理修改")])])}),[],!1,null,null,null);t.default=e.exports}}]);