(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{667:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_14-06-40.663036fb.png"},668:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_14-25-46.b1a59a0d.png"},669:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_14-26-31.1a1f28a6.png"},670:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_14-33-06.55f70506.png"},671:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_14-54-44.87d479e9.png"},672:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_14-56-46.37a81080.png"},673:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_15-01-54.d6389660.png"},674:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_15-15-51.dc201a65.png"},675:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_15-25-17.4db3074b.png"},676:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_15-31-07.208b512c.png"},677:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_15-43-21.e865ec0b.png"},678:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_15-57-00.8f03336e.png"},679:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_16-05-26.69ad878f.png"},680:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_16-08-53.f5df8fb0.png"},681:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_16-18-16.b549ef0f.png"},682:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_16-19-01.fc6e0ccb.png"},683:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_16-37-44.4ced0a70.png"},684:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_16-53-53.bd05ac87.png"},685:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_17-04-41.d57c3212.png"},686:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_17-13-15.5b9e6f39.png"},687:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_17-11-09.0c1bbd85.png"},688:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-05-06_17-46-19.feeae4e0.png"},895:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[t._v("最近一周都没课了。emm，闲来无事想从微信上下一波表情包。然而微信在我不知不觉中更新了。以前的套路没法用了，于是自己就花时间研究了一下。特记此文。\n使用的工具主要是IDA，分析的对象是PC新版微信客户端，目标是获取GIF动图。\nps:我这指的GIF是指微信表情商店里的表情（只能发送给别人，没办法保存到本地）")])]),t._v(" "),n("h2",{attrs:{id:"老版微信如何保存gif"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#老版微信如何保存gif"}},[t._v("#")]),t._v(" 老版微信如何保存GIF")]),t._v(" "),n("p",[t._v("做这件事情的起因就是发现我PC上的微信自己更新了，那么就先安利一下老版本如何截取GIF图片。我使用的是PC版的微信客户端，有关Android版的不在讨论范围内。")]),t._v(" "),n("p",[t._v("首先我们找到PC版的用户配置文件夹。一般在文档文件夹下，以微信id表示账号。如下图所示。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(667),alt:"wx"}})]),t._v(" "),n("p",[t._v("其中的"),n("code",[t._v("CustomEmotions")]),t._v("就是老版本微信缓存的GIF位置，当我们登陆PC版微信，然后用手机给别人发图的时候。消息同会同步到PC上，其中的GIF图片被处理后保存到这个文件夹内。具体是怎样处理的我也忘了，好像就是改GIF文件头部，其他没有变化。这样我们就能得到GIF了。")]),t._v(" "),n("h2",{attrs:{id:"新版微信对gif缓存做了什么处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#新版微信对gif缓存做了什么处理"}},[t._v("#")]),t._v(" 新版微信对GIF缓存做了什么处理")]),t._v(" "),n("p",[t._v("但是微信更新后，此时"),n("code",[t._v("CustomEmotions")]),t._v("文件夹内不会保存任何东西，甚至删除该文件夹也不会影响微信接受消息。这时所有的GIF被保存到"),n("code",[t._v("CustomEmoV1")]),t._v("文件夹内，而且均被加密处理。为了演示效果，我首先将该文件夹清空，然后用手机给别人发图（手动滑稽），效果如下图所示。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(668),alt:"wx2"}})]),t._v(" "),n("p",[t._v("此时PC上同步显示图片，同时GIF被保存到"),n("code",[t._v("CustomEmoV1")]),t._v("文件夹内，如下图所示。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(669),alt:"wx3"}})]),t._v(" "),n("p",[t._v("很明显，一张GIF对于一个文件，文件名32位长，可能是MD5。然后我们选择一个文件打开。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(670),alt:"wx4"}})]),t._v(" "),n("p",[t._v("可以看到文件头被修改成V1MMWX，WX肯定指的就是微信了，V1MM不知道是什么，应该是微信开发人员定义的格式。不仅如此，熟悉GIF格式的童鞋也不难发现，除了文件头，下面的内容也被加密了。")]),t._v(" "),n("p",[t._v("下面我就讲一下我是怎么分析这个文件的。")]),t._v(" "),n("h2",{attrs:{id:"如何分析加密数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何分析加密数据"}},[t._v("#")]),t._v(" 如何分析加密数据")]),t._v(" "),n("p",[t._v("首先看一下文件的大小是否发生变化。这里我要解释一下的是，我以前曾经从老版的微信上获取过GIF，这些GIF我都保存了，所以可以直接用该GIF和加密后的GIF进行对比，就不截图了。对比的结果是：加密后的大小比加密前的大小多7字节。")]),t._v(" "),n("h3",{attrs:{id:"如何看待这7个字节"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何看待这7个字节"}},[t._v("#")]),t._v(" 如何看待这7个字节")]),t._v(" "),n("ul",[n("li",[t._v("我认为其中有6个字节是V1MMWX这个文件头造成的影响。")]),t._v(" "),n("li",[t._v("对100KB左右的文件来说，加密是需要时间的，但是微信是即时通讯工具，开发人员应该不会使用复杂的加密算法。")]),t._v(" "),n("li",[t._v("整体上来说，加密前后数据量大小是一致的。")])]),t._v(" "),n("p",[t._v("基于以上三点，我猜测就是一个简单的亦或加密。然后我用python的xortool分析了一下该文件。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(671),alt:"wx5"}})]),t._v(" "),n("p",[t._v("然后自动分析出极大可能解，这里它给出了一个key是0x2b('+')。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(672),alt:"wx6"}})]),t._v(" "),n("p",[t._v("最后我将得到的文件和原始文件比对。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(673),alt:"wx7"}})]),t._v(" "),n("p",[t._v("惊人的发现！除了前0x3ff字节不一样，后面的字节都是一样的，也就是说，加密的方式其中之一就是亦或。具体就是对文件从0x400开始的字节亦或0x2b。")]),t._v(" "),n("p",[t._v("到现在为止，我已经知道了文件后面一部分的加密方式，如何解密前面一部分呢？我认为还是要抓住V1MM这个文件头，因为这个头是开发人员固定的，那么这个值应该是个明文，或者说是应该是某个exe或者dll中.rdata段的（我只能期望它不是SMC之类动态生成的了）于是我就去微信安装目录下找这个字符串在哪。\n结合exe和dll的名称、以及更新日期，我很幸运的找到了。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(674),alt:"wx8"}})]),t._v(" "),n("p",[t._v("找到之后很显然要干什么了。开IDA吧。")]),t._v(" "),n("h2",{attrs:{id:"开始分析wechatwin-dll"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开始分析wechatwin-dll"}},[t._v("#")]),t._v(" 开始分析WeChatWin.dll")]),t._v(" "),n("p",[t._v("由于这个dll相当的大，IDA分析了很久才完，我也是第二次分析这么大的东西（第一次是某CTF的tensorflow），话不多说，直接shift+f12找V1MM字符串的位置。然后我就惊了，ida没找到，估计是类型不对吧。无奈，只好手工定位了。第一次失败了，忘了是FOA了，要转成RVA。算了，直接定位到.rdata基址，直接用偏移，终于发现了V1MM的位置。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(675),alt:"wx9"}})]),t._v(" "),n("p",[t._v("然后就交叉引用，发现有三处，其中2处由同一个函数引用（另外一处应该是CRT或者编译器函数）进入这个函数分析。直接f5后，能发现关键的几行代码，如下图所示。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(676),alt:"wx10"}})]),t._v(" "),n("p",[t._v("这几行就是GIF加密后保存的地方了，首先将6字节的V1MMMX复制到cipher指针指向的首地址，然后是2个move函数，也可以理解是memcpy。而且第一个是从cipher指针指向首地址向后移动6字节开始的，那肯定就是上文中未解密的部分了。第二个move又是从第一个move结束的地方开始的，那就是上文提到的异或算法了。")]),t._v(" "),n("p",[t._v("由于这段是最后部分，加密都处理完了，我们需要往上看，同时整体把握这个函数的作用。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(677),alt:"wx11"}})]),t._v(" "),n("p",[t._v("可以发现，该函数应该是一个BOOL类型的函数，若处理成功则返回1，否则返回0。还能发现的是，cipher虽然是个局部变量，但在函数第一行可以发现它被指向了该函数的第二个参数，考虑到是BOOL类型的函数，函数只能返回一个值，那么对这个处理的函数而言，只有可能将文件句柄作为参数传入，修改后才能有效。也就是说该函数的第一个参数应该是文件句柄，而指向加密内容的第二个参数应该是加密后的指针所指向的地方。\n还有一些地方指的思考，比如a1[1]这个地方的值是什么。")]),t._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("在函数一开始，就比较a1[1]这个地方的值，小于0则直接返回，我猜测是是文件大小的意思。后面的代码直接验证了我的猜想。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(678),alt:"wx12"}})]),t._v(" "),n("p",[t._v("看到了熟悉的0x3ff，上文已经提到了，加密的GIF前面0x3ff的加密方式还是未知的，这里直接比较a1[1]和0x3ff的大小，其实就是判断GIF的大小，如果比0x3ff小，那么v7变量就不能想0x3ff，而是文件的大小。也就是说如果GIF本身大小不超过0x3ff，就不会使用第二部分的异或加密。")]),t._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("a")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" file"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("p",[t._v("分析完这部分，我们可以将该函数的第一个参数转换成结构体，第一个值是文件内容指针，第二个值是文件的大小。关于这个值怎么得到并传入该函数的，不是我们分析的重点。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(679),alt:"wx13"}})]),t._v(" "),n("p",[t._v("回过头来再看最后一部分传入的第二个参数，其实我们就能分别找到那2个加密的函数。其中绿色框中的2个函数就是加密的2个函数。\n我们先看第二个函数，也就是异或那个。")]),t._v(" "),n("h2",{attrs:{id:"第二段加密-异或"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二段加密-异或"}},[t._v("#")]),t._v(" 第二段加密-异或")]),t._v(" "),n("p",[n("img",{attrs:{src:a(680),alt:"wx14"}})]),t._v(" "),n("p",[t._v("进入这个函数就能看到，很明显的取了一个byte(0x2b)，然后循环异或，具体的过程我就不分析了，只是验证一下，因为最开始的时候我已经用xortool自动分析出来了。有兴趣的可以分析一下，或者动态调试一下看看是怎么加密的。")]),t._v(" "),n("h2",{attrs:{id:"第一段加密-rsa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一段加密-rsa"}},[t._v("#")]),t._v(" 第一段加密-rsa")]),t._v(" "),n("p",[t._v("这个第一段加密很复杂，emm看着就不想分析了，看见一串明文"),n("code",[t._v("crypto\\\\rsa\\\\rsa_lib.c")]),t._v("更是让我感到绝望。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(681),alt:"wx15"}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(682),alt:"wx16"}})]),t._v(" "),n("p",[t._v("哇，是真的绝望。。。\n然后就没有然后了，我是没有分析下去。应该是解密不了的。毕竟输出的是一个缓存文件，如果要分析微信是否能读取GIF缓存，或者说读取的格式是怎样的，我的功力还不够。。。（我要弃坑，我要转web）\n讲道理，上面的路已经不通了，下面开始想想别的方法。")]),t._v(" "),n("h2",{attrs:{id:"如何获取gif"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何获取gif"}},[t._v("#")]),t._v(" 如何获取GIF")]),t._v(" "),n("p",[t._v("其实方法我刚刚已经提示了，因为这个函数接受的参数就是完整的GIF，这个结构体上面也解释了，只要获取这个结构体就能拿到完整的GIF。因此，我们返回到原来那个函数的入口点，看什么时候结构体参数被引用。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(683),alt:"wx17"}})]),t._v(" "),n("p",[t._v("显然就是这里了，在将参数传给edi后，后面就判断结构体的第二个属性，即文件长度是否大于0。如果我们能在dll每次运行到这里的时候获取这两个数据，然后dump指定内存，就能拖出这个GIF图，也就不需要解密了。然后我动态调试了很多次，幸运的是并没有触发什么反调试和异常，使用的方式是idapython，首先是手动加载。")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GetRegValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'edi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsizeptr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GetRegValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'edi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x4")]),t._v("\nstart "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Dword"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Dword"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sizeptr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("savepath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.gif'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("xrange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("chr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Byte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("p",[t._v("然后每次都发个图给别人，PC就会缓存，然后GIF就会被保存下来了。如果每次都是手动加载的话，我记得这段代码是没问题的。但是不想每次都由我自己来下断点然后dump，为了实现自动化，自己也是学习了一波idapython来自定义Debugger Hook。")]),t._v(" "),n("h2",{attrs:{id:"idapython的debugger-hooks"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#idapython的debugger-hooks"}},[t._v("#")]),t._v(" idapython的Debugger Hooks")]),t._v(" "),n("p",[t._v("主要用于Hook IDA 内部的调试器，同时可以自定义调试功能。结构如下")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DbgHook")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DBG_Hooks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbg_process_start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbg_process_exit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbg_library_load")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbg_bpt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("p",[t._v("安装hook的方式如下")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("debugger "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DbgHook"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndebugger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hook"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("一开始我是在dbg_process_start来自动插入断点的，但是后来发现效果并不会，这一点我之后会说明。")]),t._v(" "),n("p",[t._v("我通过定义了MyDbgHook来继承DBG_Hooks，再次载入上面的脚本运行，结果却是这样的。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(684),alt:"wx18"}})]),t._v(" "),n("p",[t._v("文件里写的都是0xff。除了这种情况还会发生发送多个图片，获取的GIF均是同一个的离奇事件。查了半天不知道哪里出了原因。最后翻idapython的资料，最后发现是api使用不当，但是具体是为什么也没有资料，感觉Dword(ea)和DbgDword(ea)之类的都差不多，可能一个前面有dbg所以是dbg专用的吗。\n更新后的脚本。")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GetRegValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'edi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsizeptr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GetRegValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'edi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x4")]),t._v("\nstart "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DbgDword"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DbgDword"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sizeptr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("savepath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.gif'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("xrange")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\tf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("chr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Byte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("p",[t._v("运行结果如下图。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(685),alt:"wx19"}})]),t._v(" "),n("p",[t._v("更新后，效果好了很多，但是还是有问题，有的能显示，有的GIF显示不了，于是又查了一波idapython资料，最后发现还是api使用不当。。。Byte(ea)、DbgByte(ea)还有DbgRead(ea,n)，其实功能都是一样的，可能是Dbg的方式影响了某些API的实现，导致出现了很多问题。\n再次更新脚本。")]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[t._v("location "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GetRegValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'edi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsizeptr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GetRegValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'edi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x4")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[*]\\tGif location:[%08x],sizeptr:[%08x]"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sizeptr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstart "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DbgDword"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DbgDword"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sizeptr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[*]\\tGif start:[%08x],n:[%08x]"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ndump "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DbgRead"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("savepath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.gif'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dump"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nself"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("p",[t._v("ida日志输出如下图。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(686),alt:"wx20"}})]),t._v(" "),n("p",[t._v("运行结果如下图。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(687),alt:"wx21"}})]),t._v(" "),n("h2",{attrs:{id:"完整代码及说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#完整代码及说明"}},[t._v("#")]),t._v(" 完整代码及说明")]),t._v(" "),n("p",[t._v("代码的几点说明：")]),t._v(" "),n("ul",[n("li",[t._v("dbg_process_start是最先加载的，在这里下断点会导致问题。")]),t._v(" "),n("li",[t._v("Modules()用于遍历整个环境中的模块，一开始我是想通过这个下断点的，后来发现DBG_Hooks已经提供了类似的函数，就是dbg_library_load，由于我的目标是"),n("code",[t._v("WeChatWin.dll")]),t._v("，当其加载的时候下断点就行了。")]),t._v(" "),n("li",[t._v("下断点的方式是通过偏移量来实现的，考虑到ASLR或者其他不可抗因素，直接VA下断不可行，通过模块BA+0x1000+offsite来实现，0x1000就是.text的VirtualAddress，详细可以参照PE中的节表。")]),t._v(" "),n("li",[t._v("Dbg模式下请使用ida python对应的API，否则如上文所述会导致未知情况。如将Dword(ea)替换成DbgDword(ea)。")])]),t._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# coding:utf-8")]),t._v("\n__author__"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zjgcjy'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" idaapi "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" idautils "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" idc "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" os\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 没用到，效果不好，或者说dbg_library_load更方便")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Modules")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    mod "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" idaapi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("module_info_t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" idaapi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_first_module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" idaapi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("object_t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("base"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rebase_to"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rebase_to"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" idaapi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_next_module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mod"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyDbgHook")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DBG_Hooks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GIF计数")]),t._v("\n\tcount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#保存目录")]),t._v("\n\tsavepath "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"C:\\\\Users\\\\xxxxxx\\\\Desktop\\\\emotion"')]),t._v("\n\tkeyLocation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbg_process_start")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不要在这里插入断点")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#for i in Modules():")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\tif 'WeChatWin.dll' in i.name:")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#\t\tprint "module:[%s]\\tsize:[%#x]\\tbase:[%#x]\\tend:[%#x]" %(i.name, i.size, i.base, i.rebase_to)')]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#\t\tself.keyLocation = i.base")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#self.keyLocation += 0x247970")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#AddBpt(self.keyLocation)")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#print 'keybreakpoint:[%#x]' % self.keyLocation")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyDbgHook : Process started, pid=%d tid=%d name=%s"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbg_process_exit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n\t    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyDbgHook : Process exited pid=%d tid=%d ea=0x%x code=%d"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbg_library_load")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyDbgHook : Library loaded: pid=%d tid=%d name=%s base=%x"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" base"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对WeChatWin.dll下断点")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WeChatWin.dll'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\tself"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyLocation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" base\n\t\t\tself"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyLocation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyLocation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x1000")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x247970")]),t._v("\n\t\t\tAddBpt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyLocation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'keybreakpoint:[%#x]'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyLocation\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbg_library_unload")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n\t    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyDbgHook : Library unloaded: pid=%d tid=%d ea=0x%x info=%s"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  \n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbg_bpt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyDbgHook : Break point at %s[0x%x] pid=%d"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GetFunctionName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ea"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#是否到了关键的地址")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" GetRegValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eip'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyLocation "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\tlocation "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GetRegValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'edi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tsizeptr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GetRegValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'edi'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x4")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[*]\\tGif location:[%08x],sizeptr:[%08x]"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sizeptr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tstart "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DbgDword"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DbgDword"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sizeptr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[*]\\tGif start:[%08x],n:[%08x]"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tdump "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DbgRead"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tf "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("savepath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.gif'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'wb'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dump"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("close"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\tself"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[%x] - [%x]"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GetRegValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eip'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keyLocation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t\tidaapi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("continue_process"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  \n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbg_suspend_process")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n\t    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyDbgHook : Process suspended"')]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbg_step_into")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  \n\t    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyDbgHook : Step into"')]),t._v("\n\t    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dbg_step_over"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ndebughook "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MyDbgHook"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \ndebughook"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hook"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ok"')]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br"),n("span",{staticClass:"line-number"},[t._v("70")]),n("br"),n("span",{staticClass:"line-number"},[t._v("71")]),n("br"),n("span",{staticClass:"line-number"},[t._v("72")]),n("br"),n("span",{staticClass:"line-number"},[t._v("73")]),n("br"),n("span",{staticClass:"line-number"},[t._v("74")]),n("br"),n("span",{staticClass:"line-number"},[t._v("75")]),n("br"),n("span",{staticClass:"line-number"},[t._v("76")]),n("br"),n("span",{staticClass:"line-number"},[t._v("77")]),n("br"),n("span",{staticClass:"line-number"},[t._v("78")]),n("br"),n("span",{staticClass:"line-number"},[t._v("79")]),n("br"),n("span",{staticClass:"line-number"},[t._v("80")]),n("br"),n("span",{staticClass:"line-number"},[t._v("81")]),n("br"),n("span",{staticClass:"line-number"},[t._v("82")]),n("br"),n("span",{staticClass:"line-number"},[t._v("83")]),n("br")])]),n("h2",{attrs:{id:"写在最后"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#写在最后"}},[t._v("#")]),t._v(" 写在最后")]),t._v(" "),n("p",[t._v("通过ida python实现了获取微信GIF的功能，自动化脚本，加载模块自动下断，dump文件。只需要在手机上发送GIF，保存目录下就能得到对应的GIF。速度可以说是很快的。")]),t._v(" "),n("h2",{attrs:{id:"战果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#战果"}},[t._v("#")]),t._v(" 战果")]),t._v(" "),n("p",[n("img",{attrs:{src:a(688),alt:"wx22"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);