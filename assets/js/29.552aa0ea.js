(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{512:function(s,t,a){s.exports=a.p+"assets/img/Snipaste_2018-03-29_20-44-09.fb68303b.png"},513:function(s,t,a){s.exports=a.p+"assets/img/Snipaste_2018-03-29_21-46-57.d4ec5af9.png"},514:function(s,t,a){s.exports=a.p+"assets/img/Snipaste_2018-03-29_21-57-29.51882596.png"},515:function(s,t,a){s.exports=a.p+"assets/img/Snipaste_2018-03-30_13-23-42.28596c4f.png"},516:function(s,t,a){s.exports=a.p+"assets/img/Snipaste_2018-03-30_22-49-27.477584d7.png"},814:function(s,t,a){"use strict";a.r(t);var n=a(6),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("hr"),s._v(" "),n("blockquote",[n("p",[s._v("本篇是《Hacker Disassembling Uncovered》的笔记。由于这本书出的时间比较长了，我看的版本还是08年出的，里面有很多东西没什么学习的必要，不过多读点书还是好的吧。在这里记个备忘。")])]),s._v(" "),n("h2",{attrs:{id:"第13章"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第13章"}},[s._v("#")]),s._v(" 第13章")]),s._v(" "),n("h3",{attrs:{id:"关于x86-64体系结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关于x86-64体系结构"}},[s._v("#")]),s._v(" 关于X86-64体系结构")]),s._v(" "),n("p",[s._v("寄存器方面，额外提供了8个基础寄存器，除了原来的8个寄存器外，现在就有16个GPR了。新的寄存器的编号是从R8到R15，要访问他们的低8位，低16位和低32位可以分别使用b、w和d后缀。应用编程寄存器还包括128位的媒体控制寄存器。\n关于寻址，在x64中不存在绝对寻址。\n关于传参。使用fastcall调用约定，即第一个参数（最左边）用ecx，第二个用edx，第三个用r8，第四个用r9。若参数数量大于5，则使用压栈的方式。这里说的应该是windows的，linux64中的传参方式用了6个寄存器，从左到右依次是edi，esi，edx，ecx，r8，r9。")]),s._v(" "),n("h2",{attrs:{id:"第17章"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第17章"}},[s._v("#")]),s._v(" 第17章")]),s._v(" "),n("p",[s._v("首先复习一下TEB、PEB和fs寄存器。")]),s._v(" "),n("h3",{attrs:{id:"teb"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#teb"}},[s._v("#")]),s._v(" TEB")]),s._v(" "),n("p",[s._v("线程环境块，位于用户地址空间，在比 PEB 所在地址低的地方。包含进程中运行线程的各种信息，每个线程都对应一个TEB结构体。一个进程的所有TEB都以堆栈的方式，存放在线性内存中。在用户态可通过CPU的FS寄存器来访问该段，因为FS寄存器在用户态的时候总是指向当前线程的TEB，一般存储在[FS:0]。还可以通过OS提供的API "),n("code",[s._v("Ntdll.NtCurrentTeb()")]),s._v("来访问TEB的地址。该函数原理如下：")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("mov eax, DWORD PTR FS:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nRETN\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("关于TEB中的每一项的内容，我这里只介绍常用的部分。")]),s._v(" "),n("h4",{attrs:{id:"_0x000-nttib"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_0x000-nttib"}},[s._v("#")]),s._v(" +0x000 NtTib")]),s._v(" "),n("p",[s._v("TEB的结构体的第一个成员NtTib即为我们常说的TIB线程信息块。其中0x00位置指向 "),n("code",[s._v("\\_EXCEPTION_REGISTRATION_RECORD")]),s._v(" 结构体的链表指针（SEH）。0x18位置为_NT_TIB结构体的self指针，即为NtCurrentTeb() 函数所读出的TEB结构体指针。")]),s._v(" "),n("h4",{attrs:{id:"_0x020-clientid"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_0x020-clientid"}},[s._v("#")]),s._v(" +0x020 ClientId")]),s._v(" "),n("p",[s._v("有2个变量，其中位于0x020的是UniqueProcess，为当前进程的的Pid，可用函数 GetCurrentProcessId() 访问当前结构体成员获取进程标识符。另一个变量位于0x024的是UniqueThread，为当前进程的的Tid，可用函数 GetCurrentThreadId() 访问当前结构体成员获取线程标识符。原理如下：")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("获取pid\nmov eax, dword ptr fs:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0x18"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nmov eax, dword ptr "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("eax+0x20"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("获取tid\nmov eax, dword ptr fs:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0x18"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nmov eax, dword ptr "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("eax+0x24"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h4",{attrs:{id:"_0x030-processenvironmentblock"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_0x030-processenvironmentblock"}},[s._v("#")]),s._v(" +0x030 ProcessEnvironmentBlock")]),s._v(" "),n("p",[s._v("这里存放的是PEB结构体的指针，所以说一般 fs:[0x30] 即为PEB的起始地址。")]),s._v(" "),n("h3",{attrs:{id:"peb"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#peb"}},[s._v("#")]),s._v(" PEB")]),s._v(" "),n("p",[s._v("进程环境块，位于用户地址空间。存放进程信息，每个进程都有自己的PEB信息。PEB地址应从系统的EPROCESS结构的0x1b0偏移处获得，但访问EPROCESS需要ring0的权限。用户态可以通过TEB结构的偏移0x30处获得PEB的位置。"),n("code",[s._v("mov eax,fs:[0x30]")])]),s._v(" "),n("h4",{attrs:{id:"_0x002-beingdebugged"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_0x002-beingdebugged"}},[s._v("#")]),s._v(" +0x002 BeingDebugged")]),s._v(" "),n("p",[s._v("表示当前进程是否处于调试状态，也就是函数 IsDebuggerPresent() 所访问的结构体成员。")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("mov eax, byte ptr fs:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0x30"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nmovzx eax, byte ptr "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("eax+0x2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"_0x018-processheap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_0x018-processheap"}},[s._v("#")]),s._v(" +0x018 ProcessHeap")]),s._v(" "),n("p",[s._v("这个结构体成员就是进程堆的句柄，也就是指向结构体HEAP的指针。该结构体成员指向的HEAP结构体指针可用函数 GetProcessHeap()获取。其中偏移量是0x00c是Flags，0x010是ForceFlags。程序正常运行时，两个值分别是2和0。")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("mov eax, byte ptr fs:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0x30"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nmovzx eax, byte ptr "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("eax+0x18"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h4",{attrs:{id:"_0x068-ntglobalflag"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_0x068-ntglobalflag"}},[s._v("#")]),s._v(" +0x068 NtGlobalFlag")]),s._v(" "),n("p",[s._v("在调试状态时，NtGlobalFlag 的值为0x70。")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("mov eax, byte ptr fs:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("0x30"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nmovzx eax, byte ptr "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("eax+0x68"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" eax, 0x70\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("关于PEB和TEB之间的关系，总结如下。\nFS:[0x18] = FS:[0x00] （0x18处就是self指针）\nFS:[0x30] = &PEB\nFS:[0x00] = &SEH")]),s._v(" "),n("h3",{attrs:{id:"x64下注意点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#x64下注意点"}},[s._v("#")]),s._v(" x64下注意点")]),s._v(" "),n("p",[s._v("上面讨论的包括fs寄存器在内都是在x86基础内的，在x86中，fs段寄存器用于指向TEB和处理器控制区（Processor Control Region, KPCR）。但是，到了x64的时，fs的角色已经换成了gs。gs段寄存器在用户态指向TEB，在内核态指向KPCR。然而，当运行WOW64程序中，fs存器仍然指向32位的TEB。而且偏移量也不一样了。gs+0x30是TEB的self指针。其他wiki上也没有。。")]),s._v(" "),n("h3",{attrs:{id:"seh"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#seh"}},[s._v("#")]),s._v(" SEH")]),s._v(" "),n("p",[s._v("结构化异常处理SEH是Windows操作系统提供的强大异常处理功能。而Visual C++中的__try{}/__finally{}和__try{}/__except{}结构本质上是对Windows提供的SEH的封装。"),n("strong",[s._v("注意：SEH是基于线程的异常处理")]),s._v("。而且except和finally不像java或者python一样可以公用，在C里面是不可以一起用的。而且在try块中使用__leave关键字会使程序跳转到try块的结尾，从而自然的进入finally块。")]),s._v(" "),n("h4",{attrs:{id:"封装在vc中的seh"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#封装在vc中的seh"}},[s._v("#")]),s._v(" 封装在VC中的SEH")]),s._v(" "),n("p",[s._v("常见的流程如下。")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[s._v("__try "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 受保护的代码")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__except")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*异常过滤器exception filter*/")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 异常处理程序exception handler")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("img",{attrs:{src:a(512),alt:"SEH流程"}})]),s._v(" "),n("p",[s._v("其中异常过滤器只有三个可能的值（定义在Windows的Excpt.h中）\n"),n("code",[s._v("EXCEPTION_EXECUTE_HANDLER")]),s._v("      1     表示该异常被处理。从异常处下一条指令继续执行\n"),n("code",[s._v("EXCEPTION_CONTINUE_SERCH")]),s._v("       0     表示不能处理该异常，继续搜索执行下一个EH\n"),n("code",[s._v("EXCEPTION_CONTINUE_EXECUTION")]),s._v("  -1     表示该异常被忽略。从异常处处继续执行\n两种基本的使用方式：")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方式一：直接使用过滤器的三个返回值之一")]),s._v("\n__try "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   ……\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__except")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" EXCEPTION_EXECUTE_HANDLER "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   ……\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方式二：自定义过滤器")]),s._v("\n__try "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   ……\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__except")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("MyFilter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("GetExceptionCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   ……\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nLONG "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("MyFilter")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" DWORD dwExceptionCode "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" dwExceptionCode "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" EXCEPTION_ACCESS_VIOLATION "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" EXCEPTION_EXECUTE_HANDLER "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" EXCEPTION_CONTINUE_SEARCH "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("p",[s._v("显然方式2更好，对传入参数进行检查，如果异常类型是越权访问，则进行处理，否则则进行进一步搜索。")]),s._v(" "),n("p",[s._v("下面介绍trycatch的全局展开流程。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(513),alt:"全局展开流程"}})]),s._v(" "),n("p",[s._v("同时上代码：")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("<windows.h>")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\nusing namespace std"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unsigned")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" nStep "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Function_B")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \\__try "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" y "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 引发异常")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \\__finally\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Step "')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" nStep"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" : 执行Function_B的finally块的内容"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Function_A")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \\__try "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Function_B")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \\__finally\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Step "')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" nStep"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" : 执行Function_A的finally块的内容"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("MyExcepteFilter")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Step "')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" nStep"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" : 执行main的异常过滤器"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" EXCEPTION_EXECUTE_HANDLER "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \\__try "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("Function_A")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__except")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("MyExcepteFilter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Step "')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" nStep"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" : 执行main的except块的内容"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" endl "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br")])]),n("p",[s._v("程序的流程如下图所示。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(514),alt:"全局展开流程分析"}})]),s._v(" "),n("p",[s._v("总体来说，当遇到嵌套的try-except时，首先递归向上查找过滤器的值，只有值是"),n("code",[s._v("EXCEPTION_EXECUTE_HANDLER")]),s._v("的时候，执行该except的功能（或自定义函数），然后回到递归的最底层，进行全局展开，递归向上进行finally块的输出。\n当未进行异常处理时，产生异常，windows将弹出异常对话框。这个功能是在UnhandledExceptionFilter中实现的，在启动进程、线程时，系统会安装一个最顶层的异常处理try-except结构。")]),s._v(" "),n("p",[s._v("上面就是VC封装后的SEH处理过程，下面讲下windows下的各种异常处理手段，从底层看VC是怎么封装SEH的。")]),s._v(" "),n("h3",{attrs:{id:"veh、seh、vch、uef的系统实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#veh、seh、vch、uef的系统实现"}},[s._v("#")]),s._v(" VEH、SEH、VCH、UEF的系统实现")]),s._v(" "),n("p",[s._v("SEH异常回调函数定义：")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[s._v("EXCEPTION_DISPOSITION __cdecl "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_except_handler")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("  \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" \\_EXCEPTION_RECORD "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\\_ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//异常记录结构指针")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \\_EstablisherFrame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  　　　　　　　　　　 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//指向EXCEPTION_REGISTRATION结构,即SEH链")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" \\_CONTEXT "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\\_ContextRecord"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("　　　　　　"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Context结构指针 (线程上下文)")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \\_DispatcherContext  　　　　　　　　　"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//无意义 (调度器上下文?)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("先看返回值。")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("_EXCEPTION_DISPOSITION")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n    ExceptionContinueExecution"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0   重新执行异常指令")]),s._v("\n    ExceptionContinueSearch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//1   搜索下一个SEH")]),s._v("\n    ExceptionNestedException"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("           "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2  ")]),s._v("\n    ExceptionCollidedUnwind             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//3  ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" EXCEPTION_DISPOSITION"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("回调函数有4个指针，第一个是异常记录指针，在WINNT.H中定义，结构如下：")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("_EXCEPTION_RECORD")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DWORD    ExceptionCode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//异常代码，说明是什么异常，比如单步、除零、断点等等")]),s._v("\n    DWORD ExceptionFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//异常标志")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" \\_EXCEPTION\\_RECORD  \\"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//指向下一个异常记录（EXCEPTION\\_RECORD）的指针")]),s._v("\n    PVOID ExceptionAddress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//发生异常的地址")]),s._v("\n    DWORD NumberParameters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//异常信息的个数（即数组ExceptionInformation的个数）")]),s._v("\n    ULONG_PTR ExceptionInformation"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("EXCEPTION_MAXIMUM_PARAMETERS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//异常信息数组")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" EXCEPTION_RECORD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("PEXCEPTION_RECORD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("这个结构中的 ExcepitonCode成员是赋予异常的代码。通过在WINNT.H中搜索以“STATUS_”开头的＃define定义，你可以得到一个异常代码列表。例如"),n("code",[s._v("STATUS_ACCESS_VIOLATION")]),s._v("的代码是0xC0000005。一个更全面的异常代码列表可以在 Windows NT DDK的NTSTATUS.H中找到。此结构的第四个成员是异常发生的地址。其它成员暂时可以忽略。")]),s._v(" "),n("p",[s._v("第三个参数是指向上下文的指针，在WINNT.H中定义，它代表某个特定线程的寄存器值。结构如下：")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("_CONTEXT")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DWORD ContextFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    DWORD   Dr0"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Dr1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Dr2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Dr3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Dr6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Dr7"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    FLOATING_SAVE_AREA FloatSave"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    DWORD   SegGs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" SegFs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" SegEs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" SegDs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    DWORD   Edi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Esi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Edx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Ebx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Ecx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Eax"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Ebp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" Eip"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    DWORD   SegCs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// MUST BE SANITIZED")]),s._v("\n    DWORD   EFlags"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// MUST BE SANITIZED")]),s._v("\n    DWORD   Esp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    DWORD   SegSs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    BYTE    ExtendedRegisters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("MAXIMUM_SUPPORTED_EXTENSION"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" CONTEXT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("PCONTEXT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("这里的关键是_exept_handler回调函数接收到操作系统传递过来的许多有价值的信息，例如异常的类型和发生的地址。使用这些信息，异常回调函数就能决定下一步做什么。")]),s._v(" "),n("h4",{attrs:{id:"exception-registration"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#exception-registration"}},[s._v("#")]),s._v(" EXCEPTION_REGISTRATION")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("_EXCEPTION_REGISTRATION")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DWORD  prev"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//* EXCEPTION_REGISTRATION")]),s._v("\n    DWORD  handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// \\*\\_except_handler")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" EXCEPTION_REGISTRATION"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("这个结构就是fs寄存器所指向的位置，即在WINNT.H的NT_TIB结构的定义中被称为_EXCEPITON_REGISTARTION_RECORD。这里的第一个参数是前一个EXCEPTION_REGISTRATION的指针，第二个参数是指向_except_handler回调函数的指针。")]),s._v(" "),n("p",[s._v("当异常发生时，系统查找出错线程的TIB，获取指向EXCEPTION_REGISTRATION结构的指针。在这个结构中有一个指向_except_handler回调函数的指针。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(515),alt:"异常处理过程"}})]),s._v(" "),n("p",[s._v("简单模拟上述过程：")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("<windows.h>")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("<iostream>")])]),s._v("\nusing namespace std"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nDWORD scratch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \nEXCEPTION_DISPOSITION  __cdecl  \n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_except_handler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" \\_EXCEPTION_RECORD "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" EstablisherFrame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" \\_CONTEXT "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ContextRecord"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" DispatcherContext "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello from an exception handler\\nscratch:%#x\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("scratch "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 改变CONTEXT结构中EAX的值，以便它指向可以成功进写操作的位置  ")]),s._v("\n    ContextRecord"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("Eax "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DWORD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("scratch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 告诉操作系统重新执行出错的指令  ")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ExceptionContinueExecution"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 若返回ExceptionContinueSearch则将继续搜索下一个SEH")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  \n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n    DWORD handler "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DWORD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\\_except_handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n    \\__asm  \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建EXCEPTION_REGISTRATION结构：  ")]),s._v("\n        push handler\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// handler函数的地址  ")]),s._v("\n        push FS"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 前一个handler函数的地址  ")]),s._v("\n        mov FS"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("ESP\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 安装新的EXECEPTION_REGISTRATION结构  ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  \n    \\__asm  \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n        mov eax"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将EAX清零  ")]),s._v("\n        mov "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("eax"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写EAX指向的内存从而故意引发一个错误  ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  \n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"After writing!\\n"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n    \\__asm  \n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   \n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移去我们的EXECEPTION_REGISTRATION结构  ")]),s._v("\n        mov eax"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ESP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取前一个结构  ")]),s._v("\n        mov FS"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" EAX\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 安装前一个结构  ")]),s._v("\n        add esp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将我们的EXECEPTION_REGISTRATION弹出堆栈  ")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("这只是一种最简单的方法，下面将说明os实现的SEH链表。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(516),alt:"查找EXCEPTION_REGISTRATION结构"}})]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("<windows.h>")])]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[s._v("#"),n("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("<stdio.h>")])]),s._v("\nEXCEPTION_DISPOSITION\n__cdecl "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("_except_handler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" \\_EXCEPTION_RECORD "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" EstablisherFrame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n              "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" \\_CONTEXT "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ContextRecord"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n               "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" DispatcherContext "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Home Grown handler: Exception Code: %08X Exception Flags %X"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("ExceptionCode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("ExceptionFlags "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("ExceptionFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" EH_NONCONTINUABLE"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("ExceptionFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" EH_UNWINDING"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("ExceptionFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" EH_EXIT_UNWIND"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("ExceptionFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" EH_STACK_INVALID"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("ExceptionFlags "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x10")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" EH_NESTED_CALL"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 让其它函数处理")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ExceptionContinueSearch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("HomeGrownFrame")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    DWORD handler "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("DWORD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\\_except_handler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \\__asm\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建EXCEPTION_REGISTRATION结构：")]),s._v("\n       push handler       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// handler函数的地址")]),s._v("\n       push FS"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 前一个handler函数的地址")]),s._v("\n       mov FS"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("ESP     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 安装新的EXECEPTION_REGISTRATION结构")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \\"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("PDWORD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写入地址0，从而引发一个错误")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这句话将不会被执行，因为回调函数返回继续搜索")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"I should never get here!\\n"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \\__asm\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 移去我们的EXECEPTION_REGISTRATION结构")]),s._v("\n       mov eax"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ESP"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取前一个结构")]),s._v("\n       mov FS"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" EAX          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 安装前一个结构")]),s._v("\n       add esp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// EXECEPTION_REGISTRATION结构弹出堆栈")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    \\__try\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("HomeGrownFrame")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("__except")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" EXCEPTION_EXECUTE_HANDLER "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Caught the exception in main()\\n"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br")])]),n("p",[s._v("因为_except_handler函数并没有打算修复出错的代码，因此它返回ExceptionContinueSearch。这导致操作系统继续在EXCEPTION_REGISTRATION结构链表中搜索下一个 EXCEPTION_REGISTRATION结构。接下来安装的异常回调函数是针对main函数中的__try/__except块的。__except块简单地打印出“Caught the exception in main()”。运行这个程序，会发现回调函数调用了2次，第二次是全局展开的原因。")]),s._v(" "),n("p",[s._v("UEF、VEH、VCH异常处理函数定义（UEF和VEH、VCH的函数类型名不一样，但是结构是一样的）：")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[s._v("LONG NTAPI "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ExceptionHandler")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" \\_EXCEPTION_POINTERS "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("ExceptionInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("关于UEF、VEH、VCH函数的参数。参数只有一个，是指向结构_EXCEPTION_POINTERS的指针。具体结构如下：")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("_EXCEPTION_POINTERS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    PEXCEPTION_RECORD ExceptionRecord"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//异常记录（EXCEPTION_RECORD）的指针")]),s._v("\n    PCONTEXT ContextRecord"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//线程上下文的指针")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" EXCEPTION_POINTERS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("PEXCEPTION_POINTERS"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("这部分的详细内容就不写了，扯远了。参见参考资料。")]),s._v(" "),n("p",[s._v("关于VC为使用结构化异常处理的函数生成的标准异常堆栈帧如下：scopetable域指向一个scopetable_entry结构数组，而trylevel域实际上是这个数组的索引")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("    EBP-00 _ebp\n    EBP-04 trylevel\n    EBP-08 scopetable数组指针\n    EBP-0C handler函数地址\n    EBP-10 指向前一个EXCEPTION_REGISTRATION结构\n    EBP-14 GetExceptionInformation（EXCEPTION_POINTERS）\n    EBP-18 栈帧中的标准ESP\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("SCOPETABLE结构中的第二个成员和第三个成员分别是过滤器表达式代码的地址和相应的__except块的地址。 prviousTryLevel用于嵌套的__try块。这里的关键是函数中的每个__try块都有一个相应的SCOPETABLE结构。")]),s._v(" "),n("div",{staticClass:"language-c line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typedef")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("_SCOPETABLE")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   DWORD previousTryLevel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   DWORD lpfnFilter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   DWORD lpfnHandler"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" SCOPETABLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("PSCOPETABLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"异常处理机制执行顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异常处理机制执行顺序"}},[s._v("#")]),s._v(" 异常处理机制执行顺序")]),s._v(" "),n("p",[s._v("SEH（结构化异常处理，基于线程栈的异常处理）\nVEH（向量化异常处理，最顶端的异常处理）\nVCH（同上，最低端 的异常处理 ）\nUEF（TopLevelEH，顶级异常处理）")]),s._v(" "),n("p",[s._v("异常处理器处理顺序流程：")]),s._v(" "),n("ol",[n("li",[s._v("交给调试器(进程必须被调试)")]),s._v(" "),n("li",[s._v("执行VEH")]),s._v(" "),n("li",[s._v("执行SEH")]),s._v(" "),n("li",[s._v("TopLevelEH(进程被调试时不会被执行)")]),s._v(" "),n("li",[s._v("执行VCH")]),s._v(" "),n("li",[s._v("交给调试器(上面的异常处理都处理不了，就再次交给调试器)")]),s._v(" "),n("li",[s._v("调用异常端口通知csrss.exe")])]),s._v(" "),n("p",[s._v("关于SEH和windows下的异常处理就记这么多，已经够多的了，自己也感觉很多东西有点绕。有部分东西没记，更加深入和全面的知识点可以参照以下的链接。")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://blog.csdn.net/chenlycly/article/details/52575260",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考链接1"),n("OutboundLink")],1),s._v(" "),n("a",{attrs:{href:"https://bbs.pediy.com/thread-223939.htm",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考链接2"),n("OutboundLink")],1),s._v(" "),n("a",{attrs:{href:"https://bbs.pediy.com/thread-173853.htm",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考链接3"),n("OutboundLink")],1),s._v(" "),n("a",{attrs:{href:"https://blog.csdn.net/mycsersoft/article/details/33307655",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考链接4"),n("OutboundLink")],1),s._v(" "),n("a",{attrs:{href:"https://bbs.pediy.com/thread-32222.htm",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考链接5"),n("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);