(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{894:function(s,a,t){"use strict";t.r(a);var n=t(6),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("hr"),s._v(" "),t("blockquote",[t("p",[s._v("首先详述一下搭建VPS的过程。这里使用VULTR东京机房的Ubuntu16.04。\n其次前几天同学给我介绍了一下BBR算法，是Google推出的TCP拥塞避免新方案，亲测效果很好，所以记下来搭建过程。")])]),s._v(" "),t("h2",{attrs:{id:"搭建过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建过程"}},[s._v("#")]),s._v(" 搭建过程")]),s._v(" "),t("p",[s._v("首先选择东京机房和Ubuntu16.04，基本功能，5刀每月。因为VULTR支持按时收费，所以方便多了，不用了直接关闭就行。然后XSHELL直连。\n然后，就需要开始搭建（科学上网） 和 BBR。")]),s._v(" "),t("h3",{attrs:{id:"bbr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bbr"}},[s._v("#")]),s._v(" BBR")]),s._v(" "),t("p",[s._v("因为Linux4.9的内核已经支持TCP BBR了，所以我们将内核升级到4.9.10。")]),s._v(" "),t("p",[s._v("下载安装包：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.9.10/linux-image-4.9.10-040910-generic_4.9.10-040910.201702141931_amd64.deb\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("安装:")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("dpkg -i linux-image-4.9.10-040910-generic_4.9.10-040910.201702141931_amd64.deb\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("查看当前系统中都有哪些内核：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("dpkg -l "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" linux-image\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("删除旧的内核，我这里的旧内核版本是4.8.0-30，所以执行：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" purge *4.8*\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("现在再查看内核发现只剩下4.9.10的内核了，更新引导并重启：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("update-grub")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("重启之后编辑配置文件：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v("  /etc/sysctl.conf  \n在文件末尾加上下面两行：\nnet.core.default_qdisc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("fq\nnet.ipv4.tcp_congestion_control"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bbr\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("保存退出后执行 sysctl -p 使配置生效，并启动：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("lsmod "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" bbr\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("如果看到tcp_bbr则说明启用成功")]),s._v(" "),t("h3",{attrs:{id:"ss"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ss"}},[s._v("#")]),s._v(" SS")]),s._v(" "),t("p",[s._v("然后，你就需要开始搭建。。。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" build-essential\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" python-pip\npip "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" --upgrade pip\npip "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" setuptools\npip "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" shadowsocks\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("输入vim /etc/shadowsocks.json，用vi新建一个ss的配置")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"server"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"::"')]),s._v(",\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"server_port"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6666")]),s._v(",\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local_port"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1080")]),s._v(",\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"timeout"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v(",\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"password"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yourpassword"')]),s._v(",\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"method"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rc4-md5"')]),s._v(",\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fast_open"')]),s._v(":true,\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"workers"')]),s._v(":1\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("于是你就完成了配置，然后:")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("ssserver -c /etc/shadowsocks.json -d start\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("你服务器就跑起来啦！")]),s._v(" "),t("h2",{attrs:{id:"ipv6-ipv4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ipv6-ipv4"}},[s._v("#")]),s._v(" ipv6 -> ipv4")]),s._v(" "),t("p",[s._v("使用socat进行转发")]),s._v(" "),t("p",[t("code",[s._v("nohup socat TCP6-LISTEN:6667,fork TCP4:127.0.0.1:6666 &")])])])}),[],!1,null,null,null);a.default=e.exports}}]);