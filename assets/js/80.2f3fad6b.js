(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{515:function(t,e,r){"use strict";r.r(e);var a=r(14),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("hr"),t._v(" "),r("p",[t._v("关于文件操作，SEH和其他（由于一些不可抗力因素，写的很少，python作为工具还是很棒的）")]),t._v(" "),r("h2",{attrs:{id:"文件操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#文件操作"}},[t._v("#")]),t._v(" 文件操作")]),t._v(" "),r("p",[t._v("文件对象名=open(文件名,打开方式)，完成操作后，必须关闭文件，保证所做的修改得到保存。\nr读模式w写模式a追加模式b二进制模式+读写模式。\n常用方法：readlines()每行文本作为字符串存入列表并返回。")]),t._v(" "),r("h2",{attrs:{id:"seh"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#seh"}},[t._v("#")]),t._v(" SEH")]),t._v(" "),r("h3",{attrs:{id:"try……except结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#try……except结构"}},[t._v("#")]),t._v(" try……except结构")]),t._v(" "),r("p",[t._v("try后跟可能出现异常的语句\nexcept后跟原因，处理异常。")]),t._v(" "),r("h3",{attrs:{id:"try……except……else结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#try……except……else结构"}},[t._v("#")]),t._v(" try……except……else结构")]),t._v(" "),r("p",[t._v("try后没用异常，则执行else中的语句")]),t._v(" "),r("h3",{attrs:{id:"try……except……finally结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#try……except……finally结构"}},[t._v("#")]),t._v(" try……except……finally结构")]),t._v(" "),r("p",[t._v("无论是否发生异常，finally总会执行。")]),t._v(" "),r("h2",{attrs:{id:"断言和上下文管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#断言和上下文管理"}},[t._v("#")]),t._v(" 断言和上下文管理")]),t._v(" "),r("p",[t._v("assert expression 当expression真时，什么也不做；否则抛出异常\n通常和SEH结合使用\nwith语句可以自动管理资源，在代码块结束后，自动还原进入该代码块之前的现场或上下文，总能保证资源正常释放。\nwith context_expr")])])}),[],!1,null,null,null);e.default=s.exports}}]);