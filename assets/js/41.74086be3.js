(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{545:function(t,s,a){t.exports=a.p+"assets/img/Snipaste_2018-12-05_11-02-40.6e4d2889.png"},843:function(t,s,a){"use strict";a.r(s);var e=a(6),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("记录一下git的基础用法")]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"基本配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本配置"}},[t._v("#")]),t._v(" 基本配置")]),t._v(" "),e("p",[t._v("如果是本地新建git仓库，可以用"),e("code",[t._v("git init")]),t._v("，使某个文件夹被git所管理。")]),t._v(" "),e("h3",{attrs:{id:"配置用户名和邮箱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置用户名和邮箱"}},[t._v("#")]),t._v(" 配置用户名和邮箱")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your Name"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email@example.com"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h3",{attrs:{id:"配置ssh"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置ssh"}},[t._v("#")]),t._v(" 配置ssh")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("ssh-keygen -t rsa -C "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"youremail@example.com"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"配置gpg"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置gpg"}},[t._v("#")]),t._v(" 配置gpg")]),t._v(" "),e("p",[t._v("如果要对每次的commit都进行认证，可以配置签名，首先生成gpg key")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("gpg --gen-key\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("然后查看GPG key："),e("code",[t._v("gpg --list-keys")]),t._v("。再获取公钥："),e("code",[t._v("gpg --armor --export pub GPG key ID")]),t._v("，导入到GitHub中。\n本地的git配置就是先设置git签名时用的key："),e("code",[t._v("git config --global user.signingkey pub GPG key ID")]),t._v("。然后设置全局都使用GPG签名："),e("code",[t._v("git config --global commit.gpgsign true")])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"常用git命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用git命令"}},[t._v("#")]),t._v(" 常用git命令")]),t._v(" "),e("h3",{attrs:{id:"git-status"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-status"}},[t._v("#")]),t._v(" git status")]),t._v(" "),e("p",[t._v("查看当前版本中修改内容，如果发现不一致，可以用"),e("code",[t._v("git diff file")]),t._v("查看不同之处。")]),t._v(" "),e("h3",{attrs:{id:"git-add-rm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-add-rm"}},[t._v("#")]),t._v(" git add/rm")]),t._v(" "),e("p",[t._v("用于将新添加的文件/删除的文件和git联系起来，基本上每次commit之前都要add才行。")]),t._v(" "),e("h3",{attrs:{id:"git-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-commit"}},[t._v("#")]),t._v(" git commit")]),t._v(" "),e("p",[t._v("commit，提交版本，并用m参数加以说明message")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wrote a readme file"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("master "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("root-commit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" eaadf4e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" wrote a readme "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changed, "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" insertions"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("+"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" readme.txt\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h3",{attrs:{id:"git-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" git log")]),t._v(" "),e("p",[t._v("查看日志提交记录")]),t._v(" "),e("p",[e("img",{attrs:{src:a(545),alt:"git log"}})]),t._v(" "),e("p",[t._v("如果输出信息太多，可以加上参数，每次输出一行")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"git-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),e("p",[t._v("git版本回溯，在Git中，用"),e("code",[t._v("HEAD")]),t._v("表示当前版本，也就是最新的提交"),e("code",[t._v("1094adb")]),t._v("上一个版本就是"),e("code",[t._v("HEAD^")]),t._v("，上上一个版本就是"),e("code",[t._v("HEAD^^")]),t._v("，当然往上100个版本写成"),e("code",[t._v("HEAD~100")]),t._v("。可以使用这个命令来进行版本后退。"),e("strong",[t._v("主要要添加"),e("code",[t._v("-- hard")]),t._v("参数，否则不起作用")])]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD^\nHEAD is now at e475afc "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" distributed\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD~1\nHEAD is now at e475afc "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" distributed\n或者指定id\n"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$git")]),t._v(" reset --hard commit_id\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("code",[t._v("git reset")]),t._v("命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用"),e("code",[t._v("HEAD")]),t._v("时，表示最新的版本。例如")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD readme.txt\nUnstaged changes after reset:\nM    readme.txt\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h3",{attrs:{id:"git-reflog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reflog"}},[t._v("#")]),t._v(" git reflog")]),t._v(" "),e("p",[t._v("记录每一次commit记录，可以配合"),e("code",[t._v("git reset")]),t._v("来用，即如果回到之前版本，再会过去，可以查看commit记录来确定id，再"),e("code",[t._v("git reset --hard commit_id")]),t._v("即可。")]),t._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog\ne475afc HEAD@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": reset: moving to HEAD^\n1094adb "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("HEAD -"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" HEAD@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit: append GPL\ne475afc HEAD@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit: "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" distributed\neaadf4e HEAD@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": commit "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initial"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": wrote a readme "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h3",{attrs:{id:"git-checkout-file"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout-file"}},[t._v("#")]),t._v(" git checkout -- file")]),t._v(" "),e("p",[t._v("checkout 文件可以丢弃工作区的修改。如果之前add过，可以回到add当时的状态；如果没有add过，可以回到当前版本的状态（未修改）\n所以当是修改之后再git add的话，将无法回退，但是没有提交。这时可以用命令"),e("code",[t._v("git reset HEAD <file>")]),t._v("可以把暂存区的修改撤销掉（unstage）。\n"),e("strong",[t._v("总结")])]),t._v(" "),e("ul",[e("li",[t._v("文件没有"),e("code",[t._v("git add")]),t._v("，此时文件在工作区，直接用"),e("code",[t._v("git checkout -- file")]),t._v("可以恢复到上一个版本。")]),t._v(" "),e("li",[t._v("文件已经"),e("code",[t._v("git add")]),t._v("，此时文件在暂存区，但是没有提交，使用"),e("code",[t._v("git reset HEAD file")]),t._v("来抛弃暂存区的修改；此时文件修改只存在于工作区中，再次使用"),e("code",[t._v("git checkout -- file")]),t._v("就能恢复到上一个版本。")]),t._v(" "),e("li",[e("code",[t._v("git checkout -- file")]),t._v("还能来恢复被删除的文件，总之就是用版本库替换当前工作区。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);